[{"D:\\github\\reactjs\\storx-farmer\\src\\index.js":"1","D:\\github\\reactjs\\storx-farmer\\src\\App.js":"2","D:\\github\\reactjs\\storx-farmer\\src\\reportWebVitals.js":"3","D:\\github\\reactjs\\storx-farmer\\src\\redux\\store.js":"4","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\constant.js":"5","D:\\github\\reactjs\\storx-farmer\\src\\cacheBuster.js":"6","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\responsive.js":"7","D:\\github\\reactjs\\storx-farmer\\src\\components\\Disclaimer.js":"8","D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\Dashboard.js":"9","D:\\github\\reactjs\\storx-farmer\\src\\components\\Footer.js":"10","D:\\github\\reactjs\\storx-farmer\\src\\components\\TxHistory\\TxHistory.js":"11","D:\\github\\reactjs\\storx-farmer\\src\\components\\HOC\\RequireWallet.js":"12","D:\\github\\reactjs\\storx-farmer\\src\\components\\Staking\\Staking.js":"13","D:\\github\\reactjs\\storx-farmer\\src\\components\\Header.js":"14","D:\\github\\reactjs\\storx-farmer\\src\\middleware\\networkValidator.js":"15","D:\\github\\reactjs\\storx-farmer\\src\\middleware\\getWalletDetails.js":"16","D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\index.js":"17","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\miscellaneous.js":"18","D:\\github\\reactjs\\storx-farmer\\src\\components\\TxHistory\\Presentation.js":"19","D:\\github\\reactjs\\storx-farmer\\src\\components\\Staking\\StakingForm.js":"20","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\theme.js":"21","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\decimal.js":"22","D:\\github\\reactjs\\storx-farmer\\src\\components\\Staking\\Presentational.js":"23","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\account.js":"24","D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\BalanceModal.js":"25","D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\Presentational.js":"26","D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\common.js":"27","D:\\github\\reactjs\\storx-farmer\\src\\components\\wallet-connect\\walletConnect.js":"28","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\index.js":"29","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\xinpay.js":"30","D:\\github\\reactjs\\storx-farmer\\src\\actions\\types.js":"31","D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\WalletBalance.js":"32","D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\Theme.js":"33","D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\Wallet.js":"34","D:\\github\\reactjs\\storx-farmer\\src\\actions\\index.js":"35","D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\Timer.js":"36","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\crypto.js":"37","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\dcentBridge.js":"38","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\dcentInAppBrowser.js":"39","D:\\github\\reactjs\\storx-farmer\\src\\components\\wallet-connect\\PrivateKey.js":"40","D:\\github\\reactjs\\storx-farmer\\src\\components\\wallet-connect\\Keystore.js":"41","D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\WorldMap.js":"42","D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\GeneralModal.js":"43","D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\NodeGuidelines.js":"44","D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\OurFaqs.js":"45"},{"size":786,"mtime":1731655176622,"results":"46","hashOfConfig":"47"},{"size":2463,"mtime":1732618033114,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1731655176624,"results":"49","hashOfConfig":"47"},{"size":603,"mtime":1731655176624,"results":"50","hashOfConfig":"47"},{"size":7520,"mtime":1731655176621,"results":"51","hashOfConfig":"47"},{"size":2268,"mtime":1731655176612,"results":"52","hashOfConfig":"47"},{"size":1664,"mtime":1731655176621,"results":"53","hashOfConfig":"47"},{"size":1456,"mtime":1731655176614,"results":"54","hashOfConfig":"47"},{"size":2374,"mtime":1731655176612,"results":"55","hashOfConfig":"47"},{"size":3762,"mtime":1732343377191,"results":"56","hashOfConfig":"47"},{"size":2017,"mtime":1731655176616,"results":"57","hashOfConfig":"47"},{"size":1432,"mtime":1731655176615,"results":"58","hashOfConfig":"47"},{"size":5513,"mtime":1731655176616,"results":"59","hashOfConfig":"47"},{"size":13155,"mtime":1732618076123,"results":"60","hashOfConfig":"47"},{"size":949,"mtime":1731655176623,"results":"61","hashOfConfig":"47"},{"size":1602,"mtime":1731655176622,"results":"62","hashOfConfig":"47"},{"size":223,"mtime":1731655176624,"results":"63","hashOfConfig":"47"},{"size":1879,"mtime":1731655176621,"results":"64","hashOfConfig":"47"},{"size":6175,"mtime":1731655176616,"results":"65","hashOfConfig":"47"},{"size":6451,"mtime":1731655176616,"results":"66","hashOfConfig":"47"},{"size":828,"mtime":1731655176622,"results":"67","hashOfConfig":"47"},{"size":892,"mtime":1731655176621,"results":"68","hashOfConfig":"47"},{"size":10527,"mtime":1731655176615,"results":"69","hashOfConfig":"47"},{"size":3533,"mtime":1731655176625,"results":"70","hashOfConfig":"47"},{"size":2934,"mtime":1731655176617,"results":"71","hashOfConfig":"47"},{"size":26390,"mtime":1732611092540,"results":"72","hashOfConfig":"47"},{"size":521,"mtime":1731655176619,"results":"73","hashOfConfig":"47"},{"size":5337,"mtime":1731655176620,"results":"74","hashOfConfig":"47"},{"size":4260,"mtime":1731655176625,"results":"75","hashOfConfig":"47"},{"size":11023,"mtime":1731655176626,"results":"76","hashOfConfig":"47"},{"size":579,"mtime":1731655176569,"results":"77","hashOfConfig":"47"},{"size":396,"mtime":1731655176623,"results":"78","hashOfConfig":"47"},{"size":540,"mtime":1731655176623,"results":"79","hashOfConfig":"47"},{"size":1359,"mtime":1731655176623,"results":"80","hashOfConfig":"47"},{"size":1273,"mtime":1731655176569,"results":"81","hashOfConfig":"47"},{"size":1401,"mtime":1731655176619,"results":"82","hashOfConfig":"47"},{"size":4059,"mtime":1731655176621,"results":"83","hashOfConfig":"47"},{"size":795,"mtime":1731655176625,"results":"84","hashOfConfig":"47"},{"size":4334,"mtime":1731655176625,"results":"85","hashOfConfig":"47"},{"size":2950,"mtime":1731655176620,"results":"86","hashOfConfig":"47"},{"size":2909,"mtime":1731655176620,"results":"87","hashOfConfig":"47"},{"size":3065,"mtime":1731655176619,"results":"88","hashOfConfig":"47"},{"size":1614,"mtime":1731655176617,"results":"89","hashOfConfig":"47"},{"size":4749,"mtime":1732687013244,"results":"90","hashOfConfig":"47"},{"size":73017,"mtime":1732799990484,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"hgcxpw",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":3,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":8,"source":null},"D:\\github\\reactjs\\storx-farmer\\src\\index.js",[],["199","200"],"D:\\github\\reactjs\\storx-farmer\\src\\App.js",["201"],"D:\\github\\reactjs\\storx-farmer\\src\\reportWebVitals.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\redux\\store.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\helpers\\constant.js",["202","203","204","205"],"import _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nimport StorX from \"../abi/StorX.json\";\r\nimport ReputationFeed from \"../abi/ReputationFeed.json\";\r\nimport Staking from \"../abi/Staking.json\";\r\n\r\nexport const PROJECT_NAME = \"StorX Staking\";\r\n\r\nexport const LOADERS = {\r\n  Xinpay: \"xinpay\",\r\n  Keystore: \"keystore\",\r\n  Privatekey: \"privatekey\",\r\n  MetaMask: \"metamask\",\r\n  DcentInApp: \"dcent-inapp\",\r\n  DcentBridge: \"dcent-bridge\",\r\n};\r\n\r\nexport const GetDefaultLoader = () =>\r\n  localStorage.getItem(\"default-loader\") || null;\r\nexport const GetDefaultPath = () =>\r\n  localStorage.getItem(\"default-path\") || null;\r\nexport const SetDefaultLoader = (loader) =>\r\n  localStorage.setItem(\"deafult-loader\", loader);\r\nexport const SetDefaultPath = (path) =>\r\n  localStorage.setItem(\"deafult-path\", path);\r\n\r\nexport const SubPath = \"/\";\r\n\r\nexport const RemoveExpo = (x) => {\r\n  var data = String(x).split(/[eE]/);\r\n  if (data.length === 1) return data[0];\r\n\r\n  var z = \"\",\r\n    sign = x < 0 ? \"-\" : \"\",\r\n    str = data[0].replace(\".\", \"\"),\r\n    mag = Number(data[1]) + 1;\r\n\r\n  if (mag < 0) {\r\n    z = sign + \"0.\";\r\n    while (mag++) z += \"0\";\r\n    return z + str.replace(/^\\-/, \"\");\r\n  }\r\n  mag -= str.length;\r\n  while (mag--) z += \"0\";\r\n  return str + z;\r\n};\r\n\r\nexport const CONTRACT_ADDRESS = {\r\n  storx: \"xdc5d5f074837f5d4618b3916ba74de1bf9662a3fed\",\r\n  reputation: \"xdc5db64839828174d2d29b419e5581c16c67d62046\",\r\n  staking: \"xdc02fe7b136f5dbff8d00546cb5af45afd1e1d350c\",\r\n};\r\n\r\nexport const CONTRACT_ABI = {\r\n  storx: StorX,\r\n  reputation: ReputationFeed,\r\n  staking: Staking,\r\n};\r\n\r\n/**\r\n * @constant VALID_CHAINS  correct chain id, in decimal\r\n */\r\n// export const VALID_CHAINS = [50, 51];\r\nexport const VALID_CHAINS = [50];\r\n\r\nexport const NETWORK_NAME = {\r\n  50: \"XinFin\",\r\n  51: \"Apothem\",\r\n};\r\n\r\nexport const CHAIN_DATA = {\r\n  50: \"https://explorer.xinfin.network\",\r\n  51: \"https://explorer.apothem.network\",\r\n};\r\n\r\nexport const HTTP_PROVIDER = {\r\n  50: \"https://rpc.xinfin.network\",\r\n  51: \"https://rpc.apothem.network\",\r\n};\r\n\r\nexport const BUILD_TX_LINK = (explorer, hash) => {\r\n  let retLink = `${explorer}`;\r\n\r\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\r\n  retLink += `tx/${hash}`;\r\n  return retLink;\r\n};\r\n\r\nexport const ADDR_LINK = (explorer, addr) => {\r\n  let retLink = `${explorer}`;\r\n\r\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\r\n  retLink += `addr/${addr}`;\r\n  return retLink;\r\n};\r\n\r\nexport const BUILD_BLOCK_LINK = (explorer, hash) => {\r\n  let retLink = `${explorer}`;\r\n\r\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\r\n  retLink += `block/${hash}`;\r\n  return retLink;\r\n};\r\n\r\nexport const DEFAULT_CHAIN_ID = 50;\r\nexport const DEFAULT_PROVIDER = HTTP_PROVIDER[VALID_CHAINS[0]];\r\n\r\nexport const REPUTATION_FEED_API =\r\n  process.env.REACT_APP_REPUTATION_API || \"http://localhost:3000\";\r\n\r\nexport const AxiosInstance = axios.create({\r\n  baseURL: REPUTATION_FEED_API,\r\n});\r\n\r\nexport const WS_PROVIDER = {};\r\n\r\nexport const ObjToArr = (obj) => Object.keys(obj).map((key) => obj[key]);\r\n\r\nexport const FilterStructResp = (obj) =>\r\n  Object.keys(obj)\r\n    .filter((e, i) => {\r\n      if (i < Object.keys(obj).length / 2) return false;\r\n      return true;\r\n    })\r\n    .reduce((acc, key) => {\r\n      acc[key] = obj[key];\r\n      return acc;\r\n    }, {});\r\n\r\nexport const IsHex = (n) => {\r\n  const re = /[0-9A-Fa-f]{6}/g;\r\n\r\n  if (re.test(n)) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const GetTimerData = (seconds) => {\r\n  const days = Math.floor(seconds / 86400);\r\n  const hours = Math.floor((seconds % 86400) / 3600);\r\n  const minutes = Math.floor(((seconds % 86400) % 3600) / 60);\r\n  const sec = Math.floor(((seconds % 86400) % 3600) % 60);\r\n  return { days, hours, minutes, seconds: sec };\r\n};\r\n\r\nexport const FormatSeconds = (seconds) => {\r\n  const { days, hours, minutes, seconds: sec } = GetTimerData(seconds);\r\n  return (\r\n    <span className=\"timer\">\r\n      <span className=\"days\">{days}</span>:\r\n      <span className=\"hours\">{hours}</span>:\r\n      <span className=\"minutes\">{minutes}</span>::\r\n      <span className=\"seconds\">{sec}</span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const FormatSecondsTwo = (seconds) => {\r\n  const { days, hours, minutes, seconds: sec } = GetTimerData(seconds);\r\n  return (\r\n    <span className=\"timer\">\r\n      <span className=\"days\">D:&nbsp;{days}</span>&nbsp;&nbsp;\r\n      <span className=\"hours\">{ToDoubleDigit(hours)}</span>:\r\n      <span className=\"minutes\">{ToDoubleDigit(minutes)}</span>:\r\n      <span className=\"seconds\">{ToDoubleDigit(sec)}</span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const ToDoubleDigit = (x) => {\r\n  x = `${x}`;\r\n  if (x.length === 1) return `0${x}`;\r\n  return x;\r\n};\r\n\r\nexport const AddMultiplier = (amount) => {\r\n  const multiplier = Math.pow(10, 18);\r\n\r\n  return RemoveExpo(parseFloat(amount) * multiplier);\r\n};\r\n\r\nexport const RemoveMultiplier = (amount) => {\r\n  const multiplier = Math.pow(10, 18);\r\n\r\n  return parseFloat(amount) / multiplier;\r\n};\r\n\r\nexport const TIMER_FORMAT = \"DD:HH:MM::SS\";\r\n\r\nexport const IsJson = (abi) => {\r\n  try {\r\n    JSON.parse(abi);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const Random = (min, max) => {\r\n  return min + Math.random() * (max - min);\r\n};\r\n\r\nexport const RandomInt = (min, max) => {\r\n  return Math.round(min + Math.random() * (max - min));\r\n};\r\n\r\nexport const IsJsonRpcError = (err) => {\r\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\r\n};\r\n\r\nexport const EXPLORER = CHAIN_DATA[DEFAULT_CHAIN_ID];\r\n\r\nexport const DateStringFormat = (date) => {\r\n  date = new Date(date);\r\n  if (_.isDate(date))\r\n    return `${date.getDate()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\r\n  return date;\r\n};\r\n\r\nexport const DECIMALS = {\r\n  SRX: 2,\r\n  XDC: 2,\r\n  native: 2,\r\n  tokens: 2,\r\n};\r\n\r\nexport const COIN_NAME = {\r\n  native: \"XDC\",\r\n  tokens: \"SRX\",\r\n};\r\n\r\nexport const MinOf = (x, y) => {\r\n  return parseFloat(x) < parseFloat(y) ? parseFloat(x) : parseFloat(y);\r\n};\r\n\r\nexport const MaxOf = (x, y) => {\r\n  return parseFloat(x) < parseFloat(y) ? parseFloat(y) : parseFloat(x);\r\n};\r\n\r\nexport const Paginate = ({ data, from, limit }) => {\r\n  return data.slice(from, from + MinOf(data.length, limit));\r\n};\r\n\r\nexport const PaginateNav = (active, total) => {\r\n  const min = 0;\r\n  const max = total;\r\n\r\n  let start = MaxOf(active - 1, 0);\r\n  let end = MaxOf(MinOf(total - 1, active + 1), 0);\r\n\r\n  if (start === end && end === active) return [active];\r\n\r\n  if (start === active) {\r\n    if (start === active && active === end) return [active];\r\n    if (end + 1 < total) {\r\n      return [active, end, end + 1];\r\n    } else {\r\n      return [active, end];\r\n    }\r\n  }\r\n\r\n  if (end === active)\r\n    if (start > min) {\r\n      return [start - 1, start, active];\r\n    } else {\r\n      return [start, active];\r\n    }\r\n\r\n  return [start, active, end];\r\n};\r\n\r\nObject.defineProperty(Object.prototype, \"partialMatch\", {\r\n  value: function (fields) {\r\n    for (let key of Object.keys(fields)) {\r\n      if (Object.keys(this).includes(key)) {\r\n        if (this[key] === fields[key]) continue;\r\n        return false;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n});\r\n\r\nObject.defineProperty(Array.prototype, \"includesPartial\", {\r\n  value: function (fields) {\r\n    for (let i = 0; i < this.length; i++) {\r\n      const obj = this[i];\r\n      // console.log(\"objobj\", obj);\r\n      if (obj.partialMatch(fields)) {\r\n        return i;\r\n      }\r\n    }\r\n    return null;\r\n  },\r\n});\r\n","D:\\github\\reactjs\\storx-farmer\\src\\cacheBuster.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\helpers\\responsive.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\Disclaimer.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\Dashboard.js",["206","207"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { InitStackableTable } from \"../../helpers/responsive\";\r\nimport { AxiosInstance } from \"../../helpers/constant\";\r\n\r\nimport DashboardPresentation from \"./Presentational\";\r\nimport { GetFavorites, ToggleFavorite } from \"../../helpers/miscellaneous\";\r\nimport { fromXdcAddress, toXdcAddress } from \"../../wallets/xinpay\";\r\n\r\nconst intialState = {\r\n  data: null,\r\n  node_data: null,\r\n  favorite: GetFavorites(),\r\n  tab: 0,\r\n};\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = intialState;\r\n\r\n    this.toggleFavorite = this.toggleFavorite.bind(this);\r\n    this.setTab = this.setTab.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosInstance.get(\"/get-contract-data\")\r\n      .then((resp) => {\r\n        const allStakeholders = resp.data.data.stakeHolders;\r\n        this.setState(\r\n          { data: { ...resp.data.data, allStakeholders } },\r\n          InitStackableTable\r\n        );\r\n      })\r\n      .catch(console.error);\r\n\r\n    AxiosInstance.get(\"/get-node-coordinates\")\r\n      .then((resp) => {\r\n        this.setState({ node_data: resp.data.data });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    InitStackableTable();\r\n  }\r\n\r\n  toggleFavorite(addr) {\r\n    const newFav = ToggleFavorite(addr);\r\n    this.setState({ favorite: newFav });\r\n  }\r\n\r\n  setTab(tab) {\r\n    this.setState({ tab });\r\n  }\r\n\r\n  filterData(filter) {\r\n    if (!this.state.data) return;\r\n    const data =\r\n      this.state.data.allStakeholders || this.state.data.stakeHolders;\r\n    const filtered = Object.keys(data).reduce((acc, curr) => {\r\n      if (toXdcAddress(curr).toLowerCase().includes(toXdcAddress(filter).toLowerCase())) {\r\n        acc[curr] = data[curr];\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    this.setState({\r\n      data: {\r\n        ...this.state.data,\r\n        stakeHolders: filtered,\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DashboardPresentation\r\n        data={this.state.data}\r\n        node_data={this.state.node_data}\r\n        favorite={this.state.favorite}\r\n        toggleFavorite={this.toggleFavorite}\r\n        filterData={this.filterData}\r\n        setTab={this.setTab}\r\n        tab={this.state.tab}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\Footer.js",["208","209","210","211","212","213","214","215","216","217","218","219"],"D:\\github\\reactjs\\storx-farmer\\src\\components\\TxHistory\\TxHistory.js",["220","221","222","223","224","225","226","227","228","229","230"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport { isAddress, fromWei } from \"xdc3-utils\";\r\n\r\nimport {\r\n  AxiosInstance,\r\n  BUILD_BLOCK_LINK,\r\n  BUILD_TX_LINK,\r\n  EXPLORER,\r\n  RemoveExpo,\r\n} from \"../../helpers/constant\";\r\nimport { toXdcAddress } from \"../../wallets/xinpay\";\r\n\r\nimport { InitStackableTable } from \"../../helpers/responsive\";\r\n\r\nimport Presentation from \"./Presentation\";\r\nimport { LOADER_BOX } from \"../common/common\";\r\n\r\n\r\n\r\nclass TxHistory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events: null,\r\n      loading: false,\r\n    };\r\n\r\n    this.initialized = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getEvents();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(\r\n    //   \"account change\",\r\n    //   !_.isEqual(prevProps.wallet, this.props.wallet),\r\n    //   prevProps.wallet,\r\n    //   this.props.wallet\r\n    // );\r\n    if (!_.isEqual(prevProps.wallet, this.props.wallet)) {\r\n      // fetch events\r\n      this.getEvents();\r\n    }\r\n  }\r\n\r\n  getEvents() {\r\n    if (!this.props.wallet.address) return;\r\n    this.setState({ loading: true });\r\n    AxiosInstance.get(`/get-user-events/${this.props.wallet.address}`)\r\n      .then((resp) => {\r\n        const data = resp.data.data;\r\n        this.setState({ events: data, loading: false }, () => {\r\n          if (data.length > 0) {\r\n            if (this.initialized !== true) {\r\n              InitStackableTable();\r\n              this.initialized = true;\r\n            }\r\n          } else {\r\n            this.initialized = false;\r\n          }\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return <Presentation events={this.state.events} />;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ wallet }) {\r\n  return { wallet };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TxHistory);\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\HOC\\RequireWallet.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\Staking\\Staking.js",["231","232","233","234","235"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { fromWei, toWei } from \"xdc3-utils\";\r\n\r\nimport { SubmitContractTxGeneral } from \"../../wallets\";\r\nimport { LOADER_BOX } from \"../common/common\";\r\nimport { AxiosInstance, CONTRACT_ADDRESS, RemoveExpo } from \"../../helpers/constant\";\r\nimport { InfoHeader, InfoCard } from \"./Presentational\";\r\nimport StakingForm from \"./StakingForm\";\r\n\r\nconst InitialState = {\r\n  stake: null,\r\n  loaded: false,\r\n  approvedAmount: 0,\r\n  stakingData: null,\r\n};\r\n\r\nclass Staking extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = InitialState;\r\n\r\n    this.getStakeDetail = this.getStakeDetail.bind(this);\r\n    this.claimEarned = this.claimEarned.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStakeDetail();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.wallet.address !== this.props.wallet.address) this.getStakeDetail();\r\n  }\r\n\r\n  claimEarned() {\r\n    if (!this.props.wallet.connected) return;\r\n    SubmitContractTxGeneral(\"claimEarned\", { type: \"staking\" }, \"nonpayable\", this.props.wallet.address).then(console.log).catch(console.log);\r\n  }\r\n\r\n  async getStakeDetail() {\r\n    if (!this.props.wallet.connected) return LOADER_BOX;\r\n\r\n    const isStaker = await SubmitContractTxGeneral(\"isStaker\", { type: \"reputation\" }, \"view\", this.props.wallet.address);\r\n\r\n    const stackingDetails = await SubmitContractTxGeneral(\"stakes\", { type: \"staking\" }, \"view\", this.props.wallet.address);\r\n    const earned = await SubmitContractTxGeneral(\"earned\", { type: \"staking\" }, \"view\", this.props.wallet.address);\r\n    const stakingData = await AxiosInstance.get(\"/get-contract-data\");\r\n    const nextDripAt =\r\n    stackingDetails.staked && !stackingDetails.unstaked\r\n        ? await SubmitContractTxGeneral(\"nextDripAt\", { type: \"staking\" }, \"view\", this.props.wallet.address)\r\n        : Math.floor(new Date().getTime() / 1000).toString();\r\n    const approvedAmount = await SubmitContractTxGeneral(\"allowance\", { type: \"storx\" }, \"view\", this.props.wallet.address, CONTRACT_ADDRESS.staking);\r\n    const reputation = await SubmitContractTxGeneral(\"reputations\", { type: \"reputation\" }, \"view\", this.props.wallet.address);\r\n\r\n    const { exists, balance, lastRedeemedAt, unstakedTime, staked, totalRedeemed, stakerHolder, stakedAmount, stakedTime, unstaked, ...rst } =\r\n      stackingDetails;\r\n\r\n    this.setState(\r\n      {\r\n        loaded: true,\r\n        stake: {\r\n          exists,\r\n          balance,\r\n          lastRedeemedAt,\r\n          unstakedTime,\r\n          staked,\r\n          totalRedeemed,\r\n          stakerHolder,\r\n          stakedAmount,\r\n          stakedTime,\r\n          earned,\r\n          nextDripAt,\r\n          unstaked,\r\n          ...rst,\r\n        },\r\n        approvedAmount: fromWei(RemoveExpo(approvedAmount)),\r\n        stakingData: stakingData.data.data,\r\n        isStaker,\r\n        reputation,\r\n      },\r\n      () => {\r\n        if (unstaked) {\r\n          SubmitContractTxGeneral(\"canWithdrawStakeIn\", { type: \"staking\" }, \"view\", this.props.wallet.address).then((x) => {\r\n            // console.log(\"canWithdrawStakeIn\", x);\r\n            this.setState({\r\n              stake: {\r\n                ...this.state.stake,\r\n                canWithdrawStakeIn: x,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const reputation = this.state.isStaker ? this.state.reputation : \"NOT A STAKER\";\r\n\r\n    let stakeValidClass = this.state.isStaker && this.state.reputation >= this.state.stakingData.reputationThreshold ? \"text-success\" : \"text-danger\";\r\n\r\n    const stakeValid = this.state.stakingData\r\n      ? this.state.isStaker\r\n        ? (this.state.reputation >= this.state.stakingData.reputationThreshold).toString().toUpperCase()\r\n        : \"NOT A STAKER\"\r\n      : LOADER_BOX;\r\n\r\n    return (\r\n      <>\r\n        <section className=\"block-overlap pb-3\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\">\r\n                <div className=\"announcement\">\r\n                  <b>Note</b>: If you're facing issues with your reputation & redeeming rewards please refer the thread{\" \"}\r\n                  <a href=\"https://twitter.com/StorXNetwork/status/1450885741962096641\" target=\"_blank\" className=\"blue\" rel=\"noreferrer\">\r\n                    here\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <InfoHeader\r\n              stakingData={this.state.stakingData}\r\n              reputation={reputation}\r\n              stakeValid={stakeValid}\r\n              stakeValidClass={stakeValidClass}\r\n              wallet={this.props.wallet.address}\r\n            />\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12 col-md-6 col-lg-6 mb-3\">\r\n                <InfoCard data={this.state} getStakeDetail={this.getStakeDetail} claimRewards={this.claimEarned} stakeValid={stakeValid} />\r\n              </div>\r\n              <div className=\"col-sm-12 col-md-6 col-lg-6 mb-3\">\r\n                <StakingForm stake={this.state.stake} getStakeDetail={this.getStakeDetail} approvedAmount={this.state.approvedAmount} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ wallet }) {\r\n  return { wallet };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Staking);\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\Header.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"D:\\github\\reactjs\\storx-farmer\\src\\middleware\\networkValidator.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\middleware\\getWalletDetails.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\index.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\helpers\\miscellaneous.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\TxHistory\\Presentation.js",["250","251","252","253","254","255"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { fromWei, isAddress } from \"xdc3-utils\";\r\n\r\nimport { toXdcAddress } from \"../../wallets/xinpay\";\r\nimport { FormatNumber, FormatToken } from \"../../helpers/decimal\";\r\nimport {\r\n  ADDR_LINK,\r\n  EXPLORER,\r\n  Paginate,\r\n  PaginateNav,\r\n  RemoveExpo,\r\n  BUILD_BLOCK_LINK,\r\n  BUILD_TX_LINK,\r\n} from \"../../helpers/constant\";\r\nimport { FlexTable } from \"../../helpers/responsive\";\r\nimport { LOADER_BOX } from \"../common/common\";\r\n\r\nfunction formatValue(varName, value) {\r\n  if (isAddress(value))\r\n    return (\r\n      <span className=\"truncate\">\r\n        <a target=\"_blank\" href={ADDR_LINK(EXPLORER, toXdcAddress(value))}>\r\n          {toXdcAddress(value)}\r\n        </a>\r\n      </span>\r\n    );\r\n  if ([\"amount\", \"earnings\", \"principal\"].includes(varName))\r\n    return fromWei(RemoveExpo(value));\r\n}\r\n\r\nfunction renderReturnValues(returnValues) {\r\n  return (\r\n    <>\r\n      {Object.keys(returnValues)\r\n        .filter((x) => isNaN(x))\r\n        .map((v, i) => (\r\n          <div key={i} className=\"row\">\r\n            <div className=\"col-lg-4 col-sm-4 col-xs-4 text-left\">{v}</div>\r\n            <div className=\"col-lg-8 col-sm-8 col-xs-8\">\r\n              {formatValue(v, returnValues[v])}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RenderRows(events, from) {\r\n  if (!events)\r\n    return (\r\n      <tr>\r\n        <td className=\"u-text-center\" style={{ maxWidth: \"100%\" }} colSpan={4}>\r\n          LOADING\r\n        </td>\r\n      </tr>\r\n    );\r\n\r\n  const nodes = [];\r\n\r\n  if (events.length === 0) {\r\n    return (\r\n      <tr className=\"hover-grow \">\r\n        <td colSpan={3} className=\"u-text-center\">No Transactions done yet</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  events = Paginate({ data: events, from: from * 10, limit: 10 });\r\n\r\n  for (let i = 0; i < events.length; i++) {\r\n    const event = events[i];\r\n\r\n    nodes.push(\r\n      <tr className=\"hover-grow\">\r\n        <td>\r\n          <span className=\"table-responsive-stack-thead\">BLOCK NUMBER</span>\r\n\r\n          <a target=\"_blank\" href={BUILD_BLOCK_LINK(EXPLORER, event.block)}>\r\n            {event.block}\r\n          </a>\r\n        </td>\r\n        <td>\r\n          <span className=\"table-responsive-stack-thead\">NAME</span>\r\n          {event.name}\r\n        </td>\r\n        <td>\r\n          <span className=\"table-responsive-stack-thead\">LINK</span>\r\n          <a target=\"_blank\" href={BUILD_TX_LINK(EXPLORER, event.tx_hash)}>\r\n            HASH LINK\r\n          </a>\r\n        </td>\r\n        <td>{renderReturnValues(event.data)}</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return nodes;\r\n}\r\n\r\nfunction RenderPagination({ active, setPage, total }) {\r\n  const prevClass = active === 0 ? \"page-link disabled\" : \"page-link\";\r\n  const nextClass =\r\n    Math.ceil(total / 10) <= active + 1 ? \"page-link disabled\" : \"page-link\";\r\n  const last = Math.ceil(total / 10);\r\n\r\n  const nos = PaginateNav(active, last);\r\n  const liClass = (x) => (x === active ? \"page-link active\" : \"page-link\");\r\n  const liItemClass = (x) => (x === active ? \"page-item active\" : \"page-item\");\r\n\r\n  return (\r\n    <>\r\n      <li className=\"page-item\">\r\n        <div\r\n          className={prevClass}\r\n          onClick={() => setPage(active - 1)}\r\n          aria-label=\"Previous\"\r\n        >\r\n          <span aria-hidden=\"true\">&laquo;</span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </div>\r\n      </li>\r\n      {nos.map((x) => (\r\n        <li key={`pagonate-li-${x}`} className={liItemClass(x)}>\r\n          <div className={liClass(x)} onClick={() => setPage(x)}>\r\n            {String(x + 1)}\r\n          </div>\r\n        </li>\r\n      ))}\r\n      <li className=\"page-item\">\r\n        <div\r\n          onClick={() => setPage(active + 1)}\r\n          className={nextClass}\r\n          aria-label=\"Next\"\r\n        >\r\n          <span aria-hidden=\"true\">&raquo;</span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TxHistoryPresentation({ events }) {\r\n  const [active, setActive] = useState(0);\r\n\r\n  const data = events ? events : null;\r\n\r\n  useEffect(() => {\r\n    FlexTable();\r\n  }, [active]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"section-sm\" >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"farmnodes-tabbed-section\">\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"ticker-head mb-2\">\r\n                  <ul\r\n                    className=\"nav nav-tabs ticker-nav form-tabs\"\r\n                    role=\"tablist\"\r\n                  >\r\n                    <li className=\"nav-item mb-3\">\r\n                      <div className=\"nav-link\">TX History</div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"tab-content\">\r\n                  <div\r\n                    role=\"tabpanel\"\r\n                    className=\"tab-pane fade in active show\"\r\n                    id=\"tx-history\"\r\n                  >\r\n                    <table className=\"table table-responsive-stack\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>BLOCK NUMBER</th>\r\n                          <th>NAME</th>\r\n                          <th>LINK</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{RenderRows(data, active)}</tbody>\r\n                    </table>\r\n\r\n                    <div className=\"pagination-container\">\r\n                      <nav aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination\">\r\n                          <RenderPagination\r\n                            active={active}\r\n                            total={data?.length}\r\n                            setPage={setActive}\r\n                          />\r\n                        </ul>\r\n                      </nav>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TxHistoryPresentation;\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\Staking\\StakingForm.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\helpers\\theme.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\helpers\\decimal.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\Staking\\Presentational.js",["256"],"import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { fromWei, toXdcAddress } from \"xdc3-utils\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nimport { DateStringFormat, DECIMALS, RemoveExpo } from \"../../helpers/constant\";\r\nimport { FormatNumber, FormatToken } from \"../../helpers/decimal\";\r\nimport { LOADER_BOX } from \"../common/common\";\r\nimport Timer from \"../common/Timer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nfunction GetStatusPill(status) {\r\n  if (status) {\r\n    return (\r\n      <span className=\"badge badge-success badge-pill u-uppercase\">\r\n        {`${status}`}\r\n      </span>\r\n    );\r\n  }\r\n  return (\r\n    <span className=\"badge badge-danger badge-pill u-uppercase\">\r\n      {\" \"}\r\n      {`${status}`}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function InfoCard({ data, getStakeDetail, claimRewards, stakeValid }) {\r\n  const initialTimer0 = data.stake\r\n    ? Date.now() > data.stake.nextDripAt * 1000\r\n    : false;\r\n\r\n  const [showManual, setShowManual] = useState(initialTimer0);\r\n  const [showModal, setshowModal] = useState(false);\r\n\r\n  const staked = data.stake ? GetStatusPill(data.stake.staked) : LOADER_BOX;\r\n  const stakedAmount = data.stake\r\n    ? FormatToken(data.stake.stakedAmount)\r\n    : LOADER_BOX;\r\n  const earned = data.stake ? FormatToken(data.stake.earned) : LOADER_BOX;\r\n  const totalRedeemed = data.stake\r\n    ? FormatToken(data.stake.totalRedeemed)\r\n    : LOADER_BOX;\r\n  const lastRedeemedAt = data.stake\r\n    ? DateStringFormat(data.stake.lastRedeemedAt * 1000)\r\n    : LOADER_BOX;\r\n  const nextDripAt = data.stake ? (\r\n    <Timer\r\n      endDate={data.stake.nextDripAt * 1000}\r\n      cb={() => {\r\n        getStakeDetail();\r\n        setShowManual(true);\r\n      }}\r\n    />\r\n  ) : (\r\n    LOADER_BOX\r\n  );\r\n  const tooltipMessage = 'Note: Currently, Your Status is \"Not a Staker.\" Once you gain the reputation, your Claim Button will activate, and you can claim Rewards.'\r\n  const stakeButton = showManual ? (\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      <span className=\"\">\r\n        Claim Manually {\" \"}\r\n        <FontAwesomeIcon\r\n          onClick={() => setshowModal(true)}\r\n          className=\"u-pointer\"\r\n          icon={faQuestionCircle}\r\n        />\r\n      </span>{\" \"}\r\n      <span className=\"\">\r\n        {stakeValid === 'NOT A STAKER' ? (\r\n          <Tooltip title={tooltipMessage}>\r\n            <button onClick={claimRewards} className=\"btn btn-rounded btn-info\" disabled>\r\n              Claim Rewards\r\n            </button>\r\n          </Tooltip>\r\n        ) : (\r\n          <button onClick={claimRewards} className=\"btn btn-rounded btn-info\">\r\n            Claim Rewards\r\n          </button>\r\n        )}\r\n      </span>\r\n    </li>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stats-box p-4\">\r\n        <h5 className=\"mb-2\">Stake Details</h5>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            Staked {staked}\r\n          </li>\r\n\r\n          {data.stake && data.stake.staked ? (\r\n            <>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Staked Amount <span className=\"\">{stakedAmount}</span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Current Earnings <span className=\"\">{earned}</span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Rewards Redeemed<span className=\"\">{totalRedeemed}</span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Last Rewards <span className=\"\">{lastRedeemedAt}</span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                Next Rewards <span className=\"\">{nextDripAt}</span>\r\n              </li>\r\n              {stakeButton}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ul>\r\n\r\n        <Modal\r\n          centered={true}\r\n          show={showModal}\r\n          onHide={() => setshowModal(false)}\r\n        >\r\n          <Modal.Header>\r\n            <h4>Claim Rewards Manually</h4>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Incase there's a delay in rewards being auto credited, users can\r\n            choose to initiate claim themselves and their rewards instantly.{\" \"}\r\n            <b />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => setshowModal(false)} variant=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function InfoHeader({\r\n  stakingData,\r\n  wallet,\r\n  reputation,\r\n  stakeValid,\r\n  stakeValidClass,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n          <div className=\"stats-box p-4\">\r\n            <h5>\r\n              {wallet ? (\r\n                <>\r\n                  Wallet:{\" \"}\r\n                  <span className=\"walletAddress\">{toXdcAddress(wallet)}</span>\r\n                </>\r\n              ) : (\r\n                LOADER_BOX\r\n              )}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 mb-3\">\r\n          <div className=\"stats-box p-4\">\r\n            <div className=\"row staking-counter\">\r\n              <div className=\"col ver-divider safari-float-left\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body text-center\">\r\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\r\n                      Minimum\r\n                      <br />\r\n                      Reputation\r\n                    </h2>\r\n                    <p>\r\n                      <span className=\"counter\">\r\n                        {stakingData\r\n                          ? FormatNumber(stakingData.reputationThreshold)\r\n                          : LOADER_BOX}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col ver-divider safari-float-left\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body text-center\">\r\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\r\n                      Minimum\r\n                      <br />\r\n                      Stake Amount\r\n                    </h2>\r\n                    <p>\r\n                      <span className=\"counter\">\r\n                        {stakingData\r\n                          ? FormatNumber(\r\n                              fromWei(\r\n                                RemoveExpo(stakingData.minStakeAmount + \"\")\r\n                              )\r\n                            )\r\n                          : LOADER_BOX}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col ver-divider safari-float-left\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body text-center\">\r\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\r\n                      Maximum\r\n                      <br />\r\n                      Stake Amount\r\n                    </h2>\r\n                    <p>\r\n                      <span className=\"counter\">\r\n                        {stakingData\r\n                          ? FormatNumber(\r\n                              fromWei(RemoveExpo(stakingData.maxStakeAmount))\r\n                            )\r\n                          : LOADER_BOX}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col ver-divider safari-float-left\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body text-center\">\r\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\r\n                      Current\r\n                      <br />\r\n                      Reputation\r\n                    </h2>\r\n                    <p>\r\n                      <span className=\"counter\">\r\n                        {reputation ? reputation : LOADER_BOX}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col ver-divider safari-float-left\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body text-center\">\r\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\r\n                      Hosting\r\n                      <br />\r\n                      Rewards\r\n                    </h2>\r\n                    <p>\r\n                      <span className=\"counter\">\r\n                        {stakingData\r\n                          ? FormatNumber(\r\n                              fromWei(\r\n                                RemoveExpo(stakingData.hostingCompensation)\r\n                              )\r\n                            )\r\n                          : LOADER_BOX}\r\n                      </span>{\" \"}\r\n                      SRX P.A\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col ver-divider safari-float-left\">\r\n                <div className=\"media align-items-center\">\r\n                  <div className=\"media-body text-center\">\r\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\r\n                      Farmer Node\r\n                      <br />\r\n                      Status\r\n                    </h2>\r\n                    <p className={stakeValidClass}>\r\n                      {stakeValid ? stakeValid : LOADER_BOX}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\account.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\BalanceModal.js",["257","258","259","260"],"import React, { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { fromWei } from \"xdc3-utils\";\r\n\r\nimport XdcLogo from \"../../assets/img/wallets/xdc-logo.png\";\r\nimport SrxLogo from \"../../assets/img/wallets/storx-logo.png\";\r\nimport { DECIMALS, RemoveExpo } from \"../../helpers/constant\";\r\nimport { FormatNumber, FormatToken } from \"../../helpers/decimal\";\r\n\r\nconst BalanceModal = ({ data }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = () => setShowModal(true);\r\n\r\n  const content = (\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header border-bottom-0\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Wallet Balance\r\n        </h5>\r\n        <button\r\n          type=\"button\"\r\n          className=\"close no-outline\"\r\n          onClick={handleClose}\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <div className=\"wallet-icon-block\">\r\n              <div className=\"wallet-icon\" style={{ float: \"left\" }}>\r\n                <img src={XdcLogo} alt=\"XDC\" />\r\n              </div>\r\n              <div style={{ marginLeft: \"45px\" }}>\r\n                <h5>XDC</h5>\r\n                <p>XinFin Network</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"wallet-icon-block text-right\">\r\n              <h5>{FormatToken(data.xdc.amount)}</h5>\r\n              <p>{FormatToken(data.xdc.total)} $</p>\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            <div className=\"wallet-icon-block\">\r\n              <div className=\"wallet-icon\" style={{ float: \"left\" }}>\r\n                <img src={SrxLogo} alt=\"SRX\" />\r\n              </div>\r\n              <div style={{ marginLeft: \"45px\" }}>\r\n                <h5>SRX</h5>\r\n                <p>StorX&nbsp;Network</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"wallet-icon-block text-right\">\r\n              <h5>{FormatToken(data.srx.amount)}</h5>\r\n              <p>{FormatToken(data.srx.total)} $</p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"modal-footer border-top-0 d-flex justify-content-center\">\r\n        <button type=\"button\" className=\"back\" onClick={handleClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleShow} className=\"btn nav-link\">\r\n        Balance\r\n      </div>\r\n      <Modal centered={true} show={showModal} onHide={handleClose}>\r\n        {content}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BalanceModal;\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\Presentational.js",["261","262","263","264","265","266","267","268","269"],"D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\common.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\wallet-connect\\walletConnect.js",["270","271","272","273","274"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\r\n\r\nimport Keystore from \"./Keystore\";\r\nimport PrivateKey from \"./PrivateKey\";\r\n\r\nimport { PROJECT_NAME, DEFAULT_CHAIN_ID } from \"../../helpers/constant\";\r\nimport { initXdc3 } from \"../../wallets/xinpay\";\r\nimport * as actions from \"../../actions\";\r\n\r\nimport XinpayLogo from \"../../assets/img/wallets/xinpay-logo.png\";\r\nimport PrivateKeyLogo from \"../../assets/img/wallets/privatekey-logo.png\";\r\nimport KeystoreLogo from \"../../assets/img/wallets/keystore-logo.png\";\r\nimport DcentLogo from \"../../assets/img/wallets/dcent-logo.png\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { initDcent } from \"../../wallets/dcentInAppBrowser\";\r\n\r\nconst Provider = {\r\n  menu: \"menu\",\r\n  keystore: \"keystore\",\r\n  privateKey: \"privatekey\",\r\n};\r\n\r\nclass WalletConnect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showModal: false,\r\n      providerSelected: Provider.menu,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.wallet.connected !== this.props.wallet.connected &&\r\n      this.props.wallet.connected\r\n    ) {\r\n      this.setState({ showModal: false });\r\n    }\r\n  }\r\n\r\n  accountCallback = (loader) => (account) => {\r\n    if (account === null)\r\n      toast(\"error while loading wallet\", { autoClose: 2000, type: \"error\" });\r\n    else {\r\n      this.props.WalletConnected({\r\n        account,\r\n        chain_id: DEFAULT_CHAIN_ID,\r\n        address: account.address,\r\n        loader,\r\n      });\r\n      this.setState({ showModal: false, providerSelected: Provider.menu });\r\n    }\r\n  };\r\n\r\n  RenderWalletProvider() {\r\n    if (this.state.providerSelected === Provider.menu)\r\n      return (\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header border-bottom-0\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              Connect to a wallet\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              onClick={() => this.setState({ showModal: false })}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"wallet-connect-block\">\r\n              <button onClick={initXdc3} className=\"wallect-connect-btn\">\r\n                <div className=\"wallet-name\">\r\n                  <h4>XDCPay</h4>\r\n                </div>\r\n                <div className=\"wallet-icon\">\r\n                  <img src={XinpayLogo} alt=\"Icon\" />\r\n                </div>\r\n              </button>\r\n              <button\r\n                className=\"wallect-connect-btn\"\r\n                onClick={() =>\r\n                  this.setState({ providerSelected: Provider.privateKey })\r\n                }\r\n              >\r\n                <div className=\"wallet-name\">\r\n                  <h4>Private Key</h4>\r\n                </div>\r\n                <div className=\"wallet-icon\">\r\n                  <img src={PrivateKeyLogo} alt=\"Icon\" />\r\n                </div>\r\n              </button>\r\n              <button\r\n                className=\"wallect-connect-btn\"\r\n                onClick={() =>\r\n                  this.setState({ providerSelected: Provider.keystore })\r\n                }\r\n              >\r\n                <div className=\"wallet-name\">\r\n                  <h4>Key Store</h4>\r\n                </div>\r\n                <div className=\"wallet-icon\">\r\n                  <img src={KeystoreLogo} alt=\"Icon\" />\r\n                </div>\r\n              </button>\r\n              <button className=\"wallect-connect-btn\" onClick={initDcent}>\r\n                <div className=\"wallet-name\">\r\n                  <h4>D'CENT</h4>\r\n                </div>\r\n                <div className=\"wallet-icon\">\r\n                  <img src={DcentLogo} alt=\"Icon\" />\r\n                </div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    if (this.state.providerSelected === Provider.keystore)\r\n      return (\r\n        <Keystore\r\n          back={() => this.setState({ providerSelected: Provider.menu })}\r\n          cb={this.accountCallback(Provider.keystore)}\r\n        />\r\n      );\r\n\r\n    if (this.state.providerSelected === Provider.privateKey)\r\n      return (\r\n        <PrivateKey\r\n          back={() => this.setState({ providerSelected: Provider.menu })}\r\n          cb={this.accountCallback(Provider.privateKey)}\r\n        />\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const BTN_MSG = this.props.btnName || \"CONNECT\";\r\n    const BTN_CLASS = this.props.btnClass || \"btn nav-link\";\r\n    const disabled = this.props.disabled || false;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className={BTN_CLASS}\r\n          onClick={() => this.setState({ showModal: true })}\r\n          disabled={disabled}\r\n        >\r\n          {BTN_MSG}\r\n        </div>\r\n        <Modal\r\n          centered={true}\r\n          show={this.state.showModal}\r\n          onHide={() => this.setState({ showModal: false })}\r\n        >\r\n          {this.RenderWalletProvider()}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ wallet }) {\r\n  return { wallet };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(WalletConnect);\r\n","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\index.js",["275"],"import Xdc3 from \"xdc3\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport * as xinpay from \"./xinpay\";\r\nimport * as account from \"./account\";\r\nimport * as dcentBridge from \"./dcentBridge\";\r\nimport * as dcentInApp from \"./dcentInAppBrowser\";\r\n\r\nimport store from \"../redux/store\";\r\nimport { EXPLORER, LOADERS, DEFAULT_PROVIDER, BUILD_TX_LINK } from \"../helpers/constant\";\r\n\r\nfunction GetFuncFromLoader(loader) {\r\n  switch (loader) {\r\n    case LOADERS.Xinpay:\r\n      return xinpay;\r\n    case LOADERS.Keystore:\r\n      return account;\r\n    case LOADERS.Privatekey:\r\n      return account;\r\n    case LOADERS.DcentInApp:\r\n      return dcentInApp;\r\n    default:\r\n      return xinpay;\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n *\r\n * @note directly get from default provider\r\n *\r\n */\r\nexport function GetNativeBalance() {\r\n  return new Promise((resolve, reject) => {\r\n    const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(DEFAULT_PROVIDER));\r\n    const wallet = store.getState();\r\n    const address = wallet.wallet.address;\r\n    xdc3.eth.getBalance(address).then(resolve).catch(reject);\r\n  });\r\n}\r\n\r\nexport function IsLocked(...params) {\r\n  return new Promise((resolve, reject) => {\r\n    const wallet = store.getState();\r\n    GetFuncFromLoader(wallet.wallet.chain_id)\r\n      .IsLocked(...params)\r\n      .then((resp) => {\r\n        resolve(resp);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(\"resp\", IsJsonRpcError(e));\r\n        // console.log(\"resp\", e);\r\n        reject(e);\r\n      });\r\n  });\r\n}\r\n\r\nexport function SubmitContractTxGeneral(...params) {\r\n  return new Promise((resolve, reject) => {\r\n    const wallet = store.getState();\r\n    let toastId;\r\n    if (params[2] !== \"view\")\r\n      toastId = toast(\"Processing TX ...\", {\r\n        position: \"bottom-right\",\r\n        type: \"processing-tx\",\r\n        autoClose: false,\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: true,\r\n        draggable: false,\r\n        progress: undefined,\r\n        closeButton: false,\r\n      });\r\n\r\n    GetFuncFromLoader(wallet.wallet.loader)\r\n      .SubmitContractTxGeneral(...params)\r\n      .then((resp) => {\r\n        if (resp.transactionHash) {\r\n          const { transactionHash } = resp;\r\n          toast(\r\n            <div>\r\n              Sucsess&nbsp;\r\n              <a\r\n                href={BUILD_TX_LINK(EXPLORER, transactionHash)}\r\n                // href={`${EXPLORER}/tx/${transactionHash}`}\r\n                rel=\"noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                HASH\r\n              </a>\r\n            </div>,\r\n            {\r\n              position: \"bottom-right\",\r\n              type: \"success-tx\",\r\n              autoClose: false,\r\n              hideProgressBar: false,\r\n              closeButton: true,\r\n              closeOnClick: false,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            }\r\n          );\r\n        }\r\n\r\n        resolve(resp);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"resp\", IsJsonRpcError(e));\r\n        console.log(\"resp\", e, e.message);\r\n        const message = e.message || <>Failing Transaction</>;\r\n        toast(\r\n          <div>\r\n            <b>Error</b>:{message}\r\n          </div>,\r\n          {\r\n            position: \"bottom-right\",\r\n            type: \"error\",\r\n            autoClose: false,\r\n            hideProgressBar: false,\r\n            closeButton: true,\r\n            closeOnClick: false,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        );\r\n        reject(e);\r\n      })\r\n      .finally(() => {\r\n        if (toastId) toast.dismiss(toastId);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function GetFromAddress(hash) {\r\n  const wallet = store.getState();\r\n  return await GetFuncFromLoader(wallet.wallet.chain_id).GetFromAddress(hash);\r\n}\r\n\r\nexport const IsJsonRpcError = (err) => {\r\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\r\n};\r\n\r\nexport const GetJsonRpcError = (err) => {\r\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\r\n};\r\n\r\nexport const IsAddressEqual = (a, b) => {\r\n  a = xinpay.fromXdcAddress(a).toLowerCase();\r\n  b = xinpay.fromXdcAddress(b).toLowerCase();\r\n  return a === b;\r\n};\r\n","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\xinpay.js",["276","277","278"],"import Xdc3, { utils } from \"xdc3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport _ from \"lodash\";\r\n\r\nimport { GetRevertReason } from \"../helpers/crypto\";\r\nimport {\r\n  CONTRACT_ABI,\r\n  CONTRACT_ADDRESS,\r\n  HTTP_PROVIDER,\r\n  LOADERS,\r\n} from \"../helpers/constant\";\r\n\r\nimport * as actions from \"../actions\";\r\nimport store from \"../redux/store\";\r\nimport { toast } from \"react-toastify\";\r\nimport Web3 from \"web3\";\r\n\r\nlet addresses, xdc3, addressChangeIntervalRef;\r\n\r\nexport function IsXdc3Supported() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\nexport async function GetProvider() {\r\n  const provider = await detectEthereumProvider();\r\n  return provider;\r\n}\r\n\r\nexport const MainnetProvider = () => {\r\n  return new Xdc3.providers.HttpProvider(HTTP_PROVIDER[50]);\r\n};\r\n\r\nexport const ApothemProvider = () => {\r\n  return new Xdc3.providers.HttpProvider(HTTP_PROVIDER[50]);\r\n};\r\n\r\nexport async function GetChainId() {\r\n  let xdc3 = new Xdc3(await GetProvider());\r\n  return await xdc3.eth.net.getId();\r\n}\r\n\r\nexport async function initXdc3() {\r\n  try {\r\n    const isLocked = await IsLocked();\r\n    if (isLocked === true) {\r\n      toast(\"Please unlock XDCPay wallet to continue\", { autoClose: 2000 });\r\n      return store.dispatch(actions.WalletDisconnected());\r\n    }\r\n    const isXdc3Supported = IsXdc3Supported();\r\n    if (!isXdc3Supported) {\r\n      toast(\r\n        <div>\r\n          XinPay not available in the browser. Please refer <a href=\"/\">here</a>\r\n        </div>,\r\n        {\r\n          autoClose: 2000,\r\n        }\r\n      );\r\n\r\n      return store.dispatch(actions.WalletDisconnected());\r\n    }\r\n    if ((await GetCurrentProvider()) !== \"xinpay\") {\r\n      toast(\r\n        <div>\r\n          XinPay not available in the browser. Please refer <a href=\"/\">here</a>\r\n        </div>,\r\n        {\r\n          autoClose: 2000,\r\n        }\r\n      );\r\n      return store.dispatch(actions.WalletDisconnected());\r\n    }\r\n    // const isConnected = await window.ethereum.isConnected();\r\n    await window.ethereum.enable();\r\n    _initListerner();\r\n    const provider = await GetProvider();\r\n    xdc3 = new Xdc3(provider);\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    addresses = accounts;\r\n    const chain_id = await xdc3.eth.getChainId();\r\n    return store.dispatch(\r\n      actions.WalletConnected({\r\n        address: accounts[0],\r\n        chain_id,\r\n        loader: LOADERS.Xinpay,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n}\r\n\r\nexport function _initListerner() {\r\n  window.ethereum.removeAllListeners();\r\n\r\n  if (addressChangeIntervalRef) clearInterval(addressChangeIntervalRef);\r\n\r\n  addressChangeIntervalRef = setInterval(async () => {\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    if (_.isEqual(accounts, addresses)) return;\r\n    // console.log(\"accounts\", accounts);\r\n    addresses = accounts;\r\n    store.dispatch(actions.AccountChanged(accounts[0]));\r\n  }, 1000);\r\n\r\n  window.ethereum.on(\"accountsChanged\", async (data) => {\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    // console.log(\"accounts\", accounts);\r\n    addresses = accounts;\r\n    store.dispatch(actions.AccountChanged(accounts[0]));\r\n  });\r\n\r\n  window.ethereum.on(\"chainChanged\", async (data) => {\r\n    const chain_id = await xdc3.eth.getChainId();\r\n    store.dispatch(actions.NetworkChanged(chain_id));\r\n  });\r\n\r\n  window.ethereum.on(\"connect\", async (data) => {\r\n    xdc3 = new Xdc3(await GetProvider());\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    const chain_id = await xdc3.eth.getChainId();\r\n    addresses = accounts;\r\n    return store.dispatch(\r\n      actions.WalletConnected({\r\n        address: accounts[0],\r\n        chain_id,\r\n        loader: LOADERS.Xinpay,\r\n      })\r\n    );\r\n  });\r\n\r\n  window.ethereum.on(\"disconnect\", (data) => {\r\n    // console.log(\"disconnect\", data);\r\n    return store.dispatch(actions.WalletDisconnected());\r\n  });\r\n\r\n  window.ethereum.on(\"message\", (data) => {\r\n    // console.log(\"message\", data);\r\n  });\r\n}\r\n\r\nexport async function GetCurrentProvider() {\r\n  if (IsXdc3Supported() !== true) return null;\r\n\r\n  if (window.web3.currentProvider.isMetaMask) {\r\n    const chainId = await GetChainId();\r\n    if ([50, 51].includes(chainId)) return \"xinpay\";\r\n    return \"metamask\";\r\n  }\r\n\r\n  if (window.web3.currentProvider.isTrust) return \"trust\";\r\n\r\n  if (window.web3.currentProvider.isStatus) return \"status\";\r\n\r\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\r\n\r\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\r\n\r\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\r\n    return \"mist\";\r\n\r\n  if (window.web3.currentProvider.constructor.name === \"Xdc3FrameProvider\")\r\n    return \"parity\";\r\n\r\n  if (\r\n    window.web3.currentProvider.host &&\r\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\r\n  )\r\n    return \"infura\";\r\n\r\n  if (\r\n    window.web3.currentProvider.host &&\r\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\r\n  )\r\n    return \"localhost\";\r\n\r\n  return \"unknown\";\r\n}\r\n\r\nexport const GetNativeBalance = (address) => {\r\n  const xdc3 = new Xdc3(window.web3.currentProvider);\r\n  return xdc3.eth.getBalance(address);\r\n};\r\n\r\nexport async function SubmitContractTxGeneral(\r\n  method,\r\n  { type, address },\r\n  stateMutability,\r\n  ...params\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    GetProvider()\r\n      .then(async (provider) => {\r\n        const xdc3 = new Xdc3(provider);\r\n\r\n        const { abi, address: contractAddress } = getContractAddress(type);\r\n\r\n        address = contractAddress;\r\n\r\n        // console.log(\"typetype\", type, address, arguments);\r\n\r\n        const contract = new xdc3.eth.Contract(abi, address);\r\n\r\n        if (stateMutability === \"view\") {\r\n          contract.methods[method](...params)\r\n            .call()\r\n            .then((resp) => {\r\n              resolve(resp);\r\n            })\r\n            .catch(reject);\r\n        } else if (stateMutability === \"payable\") {\r\n          const [value] = params.splice(params.length - 1, 1);\r\n\r\n          const data = contract.methods[method](...params).encodeABI();\r\n\r\n          const tx = {\r\n            from: addresses[0],\r\n            to: address,\r\n            data,\r\n            value,\r\n          };\r\n\r\n          try {\r\n            const gasLimit = \"40000000\";\r\n            // await xdc3.eth.estimateGas(tx);\r\n          } catch (e) {\r\n            const reason = await GetRevertReason(tx);\r\n            reject({ message: reason });\r\n            return;\r\n          }\r\n\r\n          xdc3.eth.sendTransaction(tx, (err, hash) => {\r\n            if (err) reject(err);\r\n            let interval = setInterval(async () => {\r\n              try {\r\n                const receipt = await xdc3.eth.getTransactionReceipt(hash);\r\n                // console.log(\"receipt\", receipt);\r\n                if (receipt !== null) {\r\n                  if (receipt.status) {\r\n                    clearInterval(interval);\r\n                    resolve(receipt);\r\n                  } else {\r\n                    clearInterval(interval);\r\n                    reject(receipt);\r\n                  }\r\n                }\r\n              } catch (e) {\r\n                clearInterval(interval);\r\n                reject(e);\r\n              }\r\n            }, 2000);\r\n          });\r\n          // })\r\n          // .catch(reject);\r\n        } else {\r\n          // console.log(\"addresses[0]\", addresses[0], method, params);\r\n\r\n          const data = contract.methods[method](...params).encodeABI();\r\n\r\n          const tx = {\r\n            from: addresses[0],\r\n            to: address,\r\n            data,\r\n          };\r\n\r\n          try {\r\n            const gasLimit = \"40000000\";\r\n            // await xdc3.eth.estimateGas(tx);\r\n          } catch (e) {\r\n            const reason = await GetRevertReason(tx);\r\n            reject({ message: reason });\r\n            return;\r\n          }\r\n\r\n          xdc3.eth.sendTransaction(tx, (err, hash) => {\r\n            if (err) reject(err);\r\n            let interval = setInterval(async () => {\r\n              try {\r\n                const receipt = await xdc3.eth.getTransactionReceipt(hash);\r\n                if (receipt !== null) {\r\n                  if (receipt.status) {\r\n                    clearInterval(interval);\r\n                    resolve(receipt);\r\n                  } else {\r\n                    clearInterval(interval);\r\n                    reject(receipt);\r\n                  }\r\n                }\r\n              } catch (e) {\r\n                clearInterval(interval);\r\n                reject(e);\r\n              }\r\n            }, 2000);\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // console.log(arguments, e);\r\n        // console.log(\"resp\", IsJsonRpcError(e));\r\n        // console.log(\"resp\", e);\r\n        reject(e);\r\n      });\r\n  });\r\n\r\n  // } catch (e) {\r\n  //   console.log(\"resp\", IsJsonRpcError(e));\r\n  //   console.log(\"resp\", e);\r\n  //   throw e;\r\n  // }\r\n}\r\n\r\nexport async function SubmitContractTxGeneralNonAuth(\r\n  method,\r\n  { type, address },\r\n  ...params\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const xdc3 = new Xdc3(MainnetProvider());\r\n\r\n    const { abi, address: contractAddress } = getContractAddress(type);\r\n\r\n    address = contractAddress;\r\n\r\n    const contract = new xdc3.eth.Contract(abi, address);\r\n\r\n    contract.methods[method](...params)\r\n      .call()\r\n      .then((resp) => {\r\n        resolve(resp);\r\n      })\r\n      .catch(reject);\r\n  });\r\n}\r\n\r\nexport const IsJsonRpcError = (err) => {\r\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\r\n};\r\n\r\nexport const GetPastEvents = async (abi, address, ...opts) => {\r\n  const xdc3 = new Xdc3(await GetProvider());\r\n  const contract = new xdc3.eth.Contract(abi, address);\r\n  const query = {\r\n    fromBlock: 0,\r\n    toBlock: \"latest\",\r\n    ...opts,\r\n  };\r\n  return await contract.getPastEvents(\"allEvents\", { ...query });\r\n};\r\n\r\nexport const GetFromAddress = async (hash) => {\r\n  const xdc3 = new Xdc3(await GetProvider());\r\n  const tx = await xdc3.eth.getTransaction(hash);\r\n  const block = await xdc3.eth.getBlock(tx.blockHash);\r\n  return { from: tx.from, timestamp: block.timestamp };\r\n};\r\n\r\n// export const GetBlock = async (hash) => {\r\n//   const xdc3 = new Xdc3(await GetProvider());\r\n//   return (await xdc3.eth.getBlock(hash)).from;\r\n// };\r\n\r\nexport const GetJsonRpcError = (err) => {\r\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\r\n};\r\n\r\nfunction getContractAddress(type) {\r\n  return {\r\n    address: CONTRACT_ADDRESS[type],\r\n    abi: CONTRACT_ABI[type],\r\n  };\r\n}\r\n\r\nexport function fromXdcAddress(address) {\r\n  return utils.fromXdcAddress(address);\r\n}\r\n\r\nexport function toXdcAddress(address) {\r\n  return utils.toXdcAddress(address).toLowerCase();\r\n}\r\n\r\nexport async function IsLocked() {\r\n  const web3 = new Web3(await GetProvider());\r\n  const allAccounts = await web3.eth.getAccounts();\r\n  /* let xdc3 = new Xdc3(await GetProvider());\r\n  const accounts = await xdc3.eth.getAccounts();\r\n  return _.isEmpty(accounts); */\r\n}\r\n","D:\\github\\reactjs\\storx-farmer\\src\\actions\\types.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\WalletBalance.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\Theme.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\redux\\reducers\\Wallet.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\actions\\index.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\Timer.js",["279","280"],"import React, { useState, useEffect } from \"react\";\r\nimport { FormatSecondsTwo } from \"../../helpers/constant\";\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { startDate = new Date().getTime(), endDate } = props;\r\n    const startTime = new Date(startDate).getTime() / 1000,\r\n      endTime = new Date(endDate).getTime() / 1000;\r\n\r\n    const count = endTime - startTime > 0 ? endTime - startTime : 0;\r\n\r\n    this.state = { count };\r\n\r\n    this.ref = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.endDate !== this.props.endDate) {\r\n      const { startDate = new Date().getTime(), endDate } = this.props;\r\n      const startTime = new Date(startDate).getTime() / 1000,\r\n        endTime = new Date(endDate).getTime() / 1000;\r\n      const count = endTime - startTime > 0 ? endTime - startTime : 0;\r\n\r\n      this.setState({ count });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ref = setInterval(() => {\r\n      if (this.state.count >= 1) this.setState({ count: this.state.count - 1 });\r\n      else {\r\n        if (this.props.cb) {\r\n          this.props.cb();\r\n        }\r\n        clearInterval(this.ref);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.ref) clearInterval(this.ref);\r\n  }\r\n\r\n  render() {\r\n    const x = FormatSecondsTwo(this.state.count);\r\n\r\n    return <div>{x}</div>;\r\n  }\r\n}\r\n","D:\\github\\reactjs\\storx-farmer\\src\\helpers\\crypto.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\wallets\\dcentBridge.js",["281","282","283","284","285","286","287","288"],"import DcentWebConnector from \"dcent-web-connector\";\r\n\r\nimport { GetRevertReason } from \"../helpers/crypto\";\r\nimport {\r\n  CONTRACT_ABI,\r\n  CONTRACT_ADDRESS,\r\n  HTTP_PROVIDER,\r\n  LOADERS,\r\n} from \"../helpers/constant\";\r\n\r\nimport * as actions from \"../actions\";\r\nimport store from \"../redux/store\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// DcentWebConnector.info()\r\n//   .then((x) => {\r\n//     console.log(\"DcentWebConnector\", x);\r\n//   })\r\n//   .catch((e) => {\r\n//     console.log(\"DcentWebConnector\", e);\r\n//   });\r\n\r\nexport const initListener = () => {\r\n  DcentWebConnector.setConnectionListener(connectionListener);\r\n};\r\n\r\nfunction connectionListener(state) {\r\n  if (state === DcentWebConnector.state.CONNECTED) {\r\n  } else if (state === DcentWebConnector.state.DISCONNECTED) {\r\n  }\r\n}\r\n","D:\\github\\reactjs\\storx-farmer\\src\\wallets\\dcentInAppBrowser.js",["289","290"],"import Xdc3 from \"xdc3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport _ from \"lodash\";\r\n\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS, LOADERS } from \"../helpers/constant\";\r\n\r\nimport * as actions from \"../actions\";\r\nimport store from \"../redux/store\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toXdcAddress } from \"./xinpay\";\r\n\r\nlet addresses, xdc3;\r\n\r\nexport const DcentSupported = () => {\r\n  return window.ethereum && window.ethereum.isDcentWallet === true;\r\n};\r\n\r\nexport const GetChainId = () => {\r\n  return window.ethereum.request({ method: \"net_version\" });\r\n};\r\n\r\nexport async function GetProvider() {\r\n  const provider = await detectEthereumProvider();\r\n  return provider;\r\n}\r\n\r\nexport const initDcent = async () => {\r\n  try {\r\n    const isSupported = DcentSupported();\r\n    if (!isSupported) {\r\n      toast(\r\n        \"Browser doesn't support DCent wallet, please open in In-App Browser of DCent\"\r\n      );\r\n      return store.dispatch(actions.WalletDisconnected());\r\n    }\r\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n    xdc3 = new Xdc3(await GetProvider());\r\n    _initListerner();\r\n    const chain_id = await xdc3.eth.getChainId();\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    // console.log(\"chain_id\", chain_id, accounts);\r\n    return store.dispatch(\r\n      actions.WalletConnected({\r\n        address: accounts[0],\r\n        chain_id,\r\n        loader: LOADERS.DcentInApp,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\nexport function _initListerner() {\r\n  window.ethereum.removeAllListeners();\r\n\r\n  window.ethereum.on(\"accountsChanged\", async (data) => {\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    addresses = accounts;\r\n    store.dispatch(actions.AccountChanged(accounts[0]));\r\n  });\r\n\r\n  window.ethereum.on(\"chainChanged\", async (data) => {\r\n    const chain_id = await xdc3.eth.getChainId();\r\n    store.dispatch(actions.NetworkChanged(chain_id));\r\n  });\r\n\r\n  window.ethereum.on(\"connect\", async (data) => {\r\n    xdc3 = new Xdc3(await GetProvider());\r\n    const accounts = await xdc3.eth.getAccounts();\r\n    const chain_id = await xdc3.eth.getChainId();\r\n    addresses = accounts;\r\n    return store.dispatch(\r\n      actions.WalletConnected({\r\n        address: accounts[0],\r\n        chain_id,\r\n        loader: LOADERS.DcentInApp,\r\n      })\r\n    );\r\n  });\r\n\r\n  window.ethereum.on(\"disconnect\", (data) => {\r\n    // console.log(\"disconnect\", data);\r\n    return store.dispatch(actions.WalletDisconnected());\r\n  });\r\n\r\n  window.ethereum.on(\"message\", (data) => {\r\n    // console.log(\"message\", data);\r\n  });\r\n}\r\n\r\nexport async function SubmitContractTxGeneral(\r\n  method,\r\n  { type },\r\n  stateMutability,\r\n  ...params\r\n) {\r\n  try {\r\n    const xdc3 = new Xdc3(await GetProvider());\r\n\r\n    const { address, abi } = getContractAddress(type);\r\n\r\n    const contract = new xdc3.eth.Contract(abi, address);\r\n    const accounts = await xdc3.eth.getAccounts();\r\n\r\n    if (stateMutability === \"view\") {\r\n      const resp = await contract.methods[method](...params).call();\r\n\r\n      return resp;\r\n    } else if (stateMutability === \"payable\") {\r\n      const [value] = params.splice(params.length - 1, 1);\r\n      const gasLimit = '40000000'\r\n      // const gasLimit = await contract.methods[method](...params).estimateGas({\r\n      //   from: accounts[0],\r\n      // });\r\n      const resp = await contract.methods[method](...params).send({\r\n        from: accounts[0],\r\n        gas: gasLimit,\r\n        value: value,\r\n      });\r\n\r\n      return resp;\r\n    } else {\r\n      const gasLimit = '40000000'\r\n      // const gasLimit = await contract.methods[method](...params).estimateGas({\r\n      //   from: accounts[0],\r\n      // });\r\n      // console.log(\"accounts\", accounts, toXdcAddress(accounts[0]));\r\n      const resp = await contract.methods[method](...params).send({\r\n        from: toXdcAddress(accounts[0]),\r\n        gas: gasLimit,\r\n      });\r\n\r\n      return resp;\r\n    }\r\n  } catch (e) {\r\n    console.log(\"resp\", IsJsonRpcError(e));\r\n    console.log(\"resp\", e);\r\n    throw e;\r\n  }\r\n}\r\n\r\nexport const IsJsonRpcError = (err) => {\r\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\r\n};\r\n\r\nfunction getContractAddress(type) {\r\n  return {\r\n    address: CONTRACT_ADDRESS[type],\r\n    abi: CONTRACT_ABI[type],\r\n  };\r\n}\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\wallet-connect\\PrivateKey.js",["291"],"import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { GetAccountFromPK, VerifyPrivateKey } from \"../../helpers/crypto\";\r\nimport { LOADER_BOX } from \"../common/common\";\r\n\r\nconst PrivateKey = ({ cb, loading, back }) => {\r\n  const [privateKey, setPrivateKey] = useState(\"\");\r\n\r\n  function renderMessage() {\r\n    if (_.isEmpty(privateKey)) return <div className=\"no-key\">&nbsp;</div>;\r\n    const isValid = VerifyPrivateKey(privateKey);\r\n    if (isValid)\r\n      return <div className=\"valid-private-key\">Private Key is valid</div>;\r\n    else if (isValid === false)\r\n      return <div className=\"invalid-private-key\">Invalid Private Key</div>;\r\n  }\r\n\r\n  let btnName = \"Submit\";\r\n\r\n  if (loading) {\r\n    btnName = LOADER_BOX;\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header border-bottom-0\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Connect with Private Key\r\n        </h5>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <form className=\"\" role=\"form\">\r\n          <div className=\"form-group\">\r\n            <label>Enter Private Key</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Private Key\"\r\n              value={privateKey}\r\n              onChange={(x) => setPrivateKey(x.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"private-key__message\">{renderMessage()}</div>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              const account = GetAccountFromPK(privateKey);\r\n              cb(account);\r\n            }}\r\n            disabled={loading}\r\n            className=\"btn btn-rounded btn-info mb-2\"\r\n          >\r\n            {btnName}\r\n          </button>\r\n          <div></div>\r\n        </form>\r\n      </div>\r\n      <div className=\"modal-footer border-top-0 d-flex justify-content-center\">\r\n        <button\r\n          onClick={back}\r\n          type=\"button\"\r\n          className=\"back\"\r\n          data-dismiss=\"modal\"\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    // <Container>\r\n    //   <Row>\r\n    //     <input\r\n    //       className=\"private-key__input\"\r\n    //       value={privateKey}\r\n    //       onChange={(x) => setPrivateKey(x.target.value)}\r\n    //     />\r\n    //   </Row>\r\n\r\n    //   <Row>\r\n    //     <div className=\"private-key__message\">{renderMessage()}</div>\r\n    //   </Row>\r\n\r\n    //   <Row>\r\n    //     <Col>\r\n    //       <Button\r\n    //         className=\"u-float-r\"\r\n    //         onClick={() => {\r\n    //           const account = GetAccountFromPK(privateKey);\r\n    //           cb(account);\r\n    //         }}\r\n    //         disabled={loading}\r\n    //       >\r\n    //         {btnName}\r\n    //       </Button>\r\n    //     </Col>\r\n    //   </Row>\r\n    // </Container>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default PrivateKey;\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\wallet-connect\\Keystore.js",["292","293","294","295","296","297"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nimport { GetAccountFromKeystore } from \"../../helpers/crypto\";\r\n\r\nconst ImportFromFilerBodyComponent = ({ cb, defaultPath }) => {\r\n  let fileReader;\r\n\r\n  useEffect(() => {\r\n    if (defaultPath) {\r\n      handleFileChosen(defaultPath);\r\n    }\r\n  });\r\n\r\n  const handleFileRead = () => {\r\n    const content = fileReader.result;\r\n    cb(content);\r\n  };\r\n\r\n  const handleFileChosen = (file) => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = handleFileRead;\r\n    fileReader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form-file-input form-control\"\r\n        type=\"file\"\r\n        id=\"input-file\"\r\n        accept=\".json\"\r\n        onChange={(e) => handleFileChosen(e.target.files[0])}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Keystore = ({ cb, back }) => {\r\n  const [keystore, setKeystore] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  let btnName = \"Submit\";\r\n\r\n  // if (loading) {\r\n  //   btnName = LOADER_BOX;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header border-bottom-0\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Connect with Key Store\r\n        </h5>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <form className=\"\" role=\"form\">\r\n          <div className=\"form-group\">\r\n            <ImportFromFilerBodyComponent cb={setKeystore} />\r\n          </div>\r\n          <div className=\"\">{statusMessage}</div>\r\n          <div className=\"form-group\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Password\"\r\n              value={pwd}\r\n              onChange={x => setPwd(x.target.value)}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-rounded btn-info mb-2\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              const account = GetAccountFromKeystore(keystore, pwd);\r\n              if (account === null) {\r\n                setStatusMessage(\"Invalid Password / Keystore\");\r\n              } else {\r\n                setStatusMessage(\"Successfully got the account\");\r\n              }\r\n              cb(account);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n          <div></div>\r\n        </form>\r\n      </div>\r\n      <div className=\"modal-footer border-top-0 d-flex justify-content-center\">\r\n        <button\r\n          onClick={back}\r\n          type=\"button\"\r\n          className=\"back\"\r\n          data-dismiss=\"modal\"\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keystore;\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\WorldMap.js",[],"D:\\github\\reactjs\\storx-farmer\\src\\components\\common\\GeneralModal.js",["298"],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction ToggleModal({\r\n  children,\r\n  btnElement = Button,\r\n  btnName = \"View\",\r\n  btnProps = {},\r\n  disableSubmit = true,\r\n  disableClose = true,\r\n  modalClass = \"custom-modal\",\r\n  footer = \"\",\r\n  ...rest\r\n}) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = () => setShowModal(true);\r\n\r\n  const submitBtn = (\r\n    <Button\r\n      variant=\"primary\"\r\n      onClick={() => {\r\n        if (rest.onSubmit && typeof rest.onSubmit === \"function\") {\r\n          rest.onSubmit();\r\n        }\r\n      }}\r\n    >\r\n      {rest.btnNameSubmit || \"Understood\"}\r\n    </Button>\r\n  );\r\n\r\n  let _footer = footer ? (\r\n    footer\r\n  ) : disableClose === true ? (\r\n    \"\"\r\n  ) : (\r\n    <Button\r\n      variant=\"secondary\"\r\n      onClick={() => {\r\n        handleClose();\r\n        if (rest.onClose && typeof rest.onClose === \"function\") {\r\n          rest.onClose();\r\n        }\r\n      }}\r\n    ></Button>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {React.createElement(\r\n        btnElement,\r\n        { ...btnProps, onClick: handleShow },\r\n        btnName\r\n      )}\r\n\r\n      <Modal\r\n        dialogClassName={modalClass}\r\n        {...rest}\r\n        show={showModal}\r\n        onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{rest.modalname}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{children}</Modal.Body>\r\n        <Modal.Footer>{_footer}</Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToggleModal;\r\n","D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\NodeGuidelines.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332"],"D:\\github\\reactjs\\storx-farmer\\src\\components\\Dashboard\\OurFaqs.js",["333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374"],{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","severity":1,"message":"380","line":41,"column":10,"nodeType":"381","messageId":"382","endLine":41,"endColumn":16},{"ruleId":"383","severity":1,"message":"384","line":42,"column":30,"nodeType":"385","messageId":"386","endLine":42,"endColumn":31,"suggestions":"387"},{"ruleId":"379","severity":1,"message":"388","line":251,"column":9,"nodeType":"381","messageId":"382","endLine":251,"endColumn":12},{"ruleId":"389","severity":1,"message":"390","line":277,"column":1,"nodeType":"391","messageId":"392","endLine":289,"endColumn":3},{"ruleId":"389","severity":1,"message":"393","line":291,"column":1,"nodeType":"391","messageId":"392","endLine":302,"endColumn":3},{"ruleId":"379","severity":1,"message":"394","line":2,"column":8,"nodeType":"381","messageId":"382","endLine":2,"endColumn":9},{"ruleId":"379","severity":1,"message":"395","line":9,"column":10,"nodeType":"381","messageId":"382","endLine":9,"endColumn":24},{"ruleId":"379","severity":1,"message":"396","line":13,"column":10,"nodeType":"381","messageId":"382","endLine":13,"endColumn":14},{"ruleId":"397","severity":1,"message":"398","line":37,"column":21,"nodeType":"399","endLine":37,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":38,"column":21,"nodeType":"399","endLine":38,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":39,"column":21,"nodeType":"399","endLine":39,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":40,"column":21,"nodeType":"399","endLine":40,"endColumn":33},{"ruleId":"400","severity":1,"message":"401","line":47,"column":21,"nodeType":"399","messageId":"402","endLine":47,"endColumn":80,"fix":"403"},{"ruleId":"400","severity":1,"message":"401","line":52,"column":21,"nodeType":"399","messageId":"402","endLine":55,"endColumn":22,"fix":"404"},{"ruleId":"400","severity":1,"message":"401","line":60,"column":21,"nodeType":"399","messageId":"402","endLine":63,"endColumn":22,"fix":"405"},{"ruleId":"400","severity":1,"message":"401","line":68,"column":21,"nodeType":"399","messageId":"402","endLine":68,"endColumn":73,"fix":"406"},{"ruleId":"400","severity":1,"message":"401","line":73,"column":21,"nodeType":"399","messageId":"402","endLine":73,"endColumn":79,"fix":"407"},{"ruleId":"400","severity":1,"message":"401","line":78,"column":21,"nodeType":"399","messageId":"402","endLine":81,"endColumn":22,"fix":"408"},{"ruleId":"397","severity":1,"message":"398","line":92,"column":7,"nodeType":"399","endLine":92,"endColumn":60},{"ruleId":"379","severity":1,"message":"409","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":19},{"ruleId":"379","severity":1,"message":"410","line":3,"column":21,"nodeType":"381","messageId":"382","endLine":3,"endColumn":24},{"ruleId":"379","severity":1,"message":"411","line":3,"column":26,"nodeType":"381","messageId":"382","endLine":3,"endColumn":29},{"ruleId":"379","severity":1,"message":"412","line":5,"column":10,"nodeType":"381","messageId":"382","endLine":5,"endColumn":19},{"ruleId":"379","severity":1,"message":"413","line":5,"column":21,"nodeType":"381","messageId":"382","endLine":5,"endColumn":28},{"ruleId":"379","severity":1,"message":"414","line":9,"column":3,"nodeType":"381","messageId":"382","endLine":9,"endColumn":19},{"ruleId":"379","severity":1,"message":"415","line":10,"column":3,"nodeType":"381","messageId":"382","endLine":10,"endColumn":16},{"ruleId":"379","severity":1,"message":"416","line":11,"column":3,"nodeType":"381","messageId":"382","endLine":11,"endColumn":11},{"ruleId":"379","severity":1,"message":"417","line":12,"column":3,"nodeType":"381","messageId":"382","endLine":12,"endColumn":13},{"ruleId":"379","severity":1,"message":"418","line":14,"column":10,"nodeType":"381","messageId":"382","endLine":14,"endColumn":22},{"ruleId":"379","severity":1,"message":"419","line":19,"column":10,"nodeType":"381","messageId":"382","endLine":19,"endColumn":20},{"ruleId":"379","severity":1,"message":"409","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":19},{"ruleId":"379","severity":1,"message":"410","line":3,"column":21,"nodeType":"381","messageId":"382","endLine":3,"endColumn":24},{"ruleId":"379","severity":1,"message":"411","line":3,"column":26,"nodeType":"381","messageId":"382","endLine":3,"endColumn":29},{"ruleId":"379","severity":1,"message":"380","line":3,"column":31,"nodeType":"381","messageId":"382","endLine":3,"endColumn":37},{"ruleId":"379","severity":1,"message":"420","line":4,"column":19,"nodeType":"381","messageId":"382","endLine":4,"endColumn":24},{"ruleId":"379","severity":1,"message":"421","line":1,"column":16,"nodeType":"381","messageId":"382","endLine":1,"endColumn":24},{"ruleId":"379","severity":1,"message":"422","line":7,"column":8,"nodeType":"381","messageId":"382","endLine":7,"endColumn":26},{"ruleId":"379","severity":1,"message":"423","line":14,"column":8,"nodeType":"381","messageId":"382","endLine":14,"endColumn":17},{"ruleId":"379","severity":1,"message":"424","line":15,"column":8,"nodeType":"381","messageId":"382","endLine":15,"endColumn":16},{"ruleId":"379","severity":1,"message":"425","line":25,"column":3,"nodeType":"381","messageId":"382","endLine":25,"endColumn":14},{"ruleId":"379","severity":1,"message":"426","line":26,"column":3,"nodeType":"381","messageId":"382","endLine":26,"endColumn":24},{"ruleId":"379","severity":1,"message":"427","line":27,"column":3,"nodeType":"381","messageId":"382","endLine":27,"endColumn":9},{"ruleId":"379","severity":1,"message":"428","line":30,"column":10,"nodeType":"381","messageId":"382","endLine":30,"endColumn":33},{"ruleId":"379","severity":1,"message":"429","line":198,"column":11,"nodeType":"381","messageId":"382","endLine":198,"endColumn":14},{"ruleId":"400","severity":1,"message":"401","line":208,"column":23,"nodeType":"399","messageId":"402","endLine":208,"endColumn":87,"fix":"430"},{"ruleId":"400","severity":1,"message":"401","line":216,"column":23,"nodeType":"399","messageId":"402","endLine":216,"endColumn":82,"fix":"431"},{"ruleId":"400","severity":1,"message":"401","line":221,"column":23,"nodeType":"399","messageId":"402","endLine":221,"endColumn":96,"fix":"432"},{"ruleId":"400","severity":1,"message":"401","line":226,"column":23,"nodeType":"399","messageId":"402","endLine":226,"endColumn":106,"fix":"433"},{"ruleId":"400","severity":1,"message":"401","line":256,"column":25,"nodeType":"399","messageId":"402","endLine":256,"endColumn":80,"fix":"434"},{"ruleId":"379","severity":1,"message":"435","line":6,"column":10,"nodeType":"381","messageId":"382","endLine":6,"endColumn":22},{"ruleId":"379","severity":1,"message":"436","line":6,"column":24,"nodeType":"381","messageId":"382","endLine":6,"endColumn":35},{"ruleId":"379","severity":1,"message":"419","line":17,"column":10,"nodeType":"381","messageId":"382","endLine":17,"endColumn":20},{"ruleId":"400","severity":1,"message":"401","line":23,"column":9,"nodeType":"399","messageId":"402","endLine":23,"endColumn":76,"fix":"437"},{"ruleId":"400","severity":1,"message":"401","line":79,"column":11,"nodeType":"399","messageId":"402","endLine":79,"endColumn":77,"fix":"438"},{"ruleId":"400","severity":1,"message":"401","line":89,"column":11,"nodeType":"399","messageId":"402","endLine":89,"endColumn":76,"fix":"439"},{"ruleId":"379","severity":1,"message":"440","line":7,"column":28,"nodeType":"381","messageId":"382","endLine":7,"endColumn":36},{"ruleId":"379","severity":1,"message":"413","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":17},{"ruleId":"379","severity":1,"message":"440","line":7,"column":10,"nodeType":"381","messageId":"382","endLine":7,"endColumn":18},{"ruleId":"379","severity":1,"message":"417","line":7,"column":20,"nodeType":"381","messageId":"382","endLine":7,"endColumn":30},{"ruleId":"379","severity":1,"message":"435","line":8,"column":10,"nodeType":"381","messageId":"382","endLine":8,"endColumn":22},{"ruleId":"379","severity":1,"message":"396","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":14},{"ruleId":"379","severity":1,"message":"441","line":9,"column":8,"nodeType":"381","messageId":"382","endLine":9,"endColumn":18},{"ruleId":"379","severity":1,"message":"442","line":30,"column":7,"nodeType":"381","messageId":"382","endLine":30,"endColumn":14},{"ruleId":"400","severity":1,"message":"401","line":101,"column":11,"nodeType":"399","messageId":"402","endLine":104,"endColumn":12,"fix":"443"},{"ruleId":"379","severity":1,"message":"444","line":197,"column":9,"nodeType":"381","messageId":"382","endLine":197,"endColumn":18},{"ruleId":"445","severity":1,"message":"446","line":241,"column":6,"nodeType":"447","endLine":241,"endColumn":18,"suggestions":"448"},{"ruleId":"400","severity":1,"message":"401","line":306,"column":15,"nodeType":"399","messageId":"402","endLine":306,"endColumn":80,"fix":"449"},{"ruleId":"397","severity":1,"message":"398","line":327,"column":15,"nodeType":"399","endLine":327,"endColumn":27},{"ruleId":"400","severity":1,"message":"401","line":337,"column":15,"nodeType":"399","messageId":"402","endLine":337,"endColumn":79,"fix":"450"},{"ruleId":"379","severity":1,"message":"409","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":19},{"ruleId":"379","severity":1,"message":"410","line":3,"column":21,"nodeType":"381","messageId":"382","endLine":3,"endColumn":24},{"ruleId":"379","severity":1,"message":"411","line":3,"column":26,"nodeType":"381","messageId":"382","endLine":3,"endColumn":29},{"ruleId":"379","severity":1,"message":"380","line":3,"column":38,"nodeType":"381","messageId":"382","endLine":3,"endColumn":44},{"ruleId":"379","severity":1,"message":"451","line":8,"column":10,"nodeType":"381","messageId":"382","endLine":8,"endColumn":22},{"ruleId":"379","severity":1,"message":"452","line":6,"column":13,"nodeType":"381","messageId":"382","endLine":6,"endColumn":24},{"ruleId":"379","severity":1,"message":"453","line":224,"column":19,"nodeType":"381","messageId":"382","endLine":224,"endColumn":27},{"ruleId":"379","severity":1,"message":"453","line":267,"column":19,"nodeType":"381","messageId":"382","endLine":267,"endColumn":27},{"ruleId":"379","severity":1,"message":"454","line":383,"column":9,"nodeType":"381","messageId":"382","endLine":383,"endColumn":20},{"ruleId":"379","severity":1,"message":"421","line":1,"column":17,"nodeType":"381","messageId":"382","endLine":1,"endColumn":25},{"ruleId":"379","severity":1,"message":"455","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"456","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":25},{"ruleId":"379","severity":1,"message":"457","line":5,"column":3,"nodeType":"381","messageId":"382","endLine":5,"endColumn":15},{"ruleId":"379","severity":1,"message":"458","line":6,"column":3,"nodeType":"381","messageId":"382","endLine":6,"endColumn":19},{"ruleId":"379","severity":1,"message":"459","line":7,"column":3,"nodeType":"381","messageId":"382","endLine":7,"endColumn":16},{"ruleId":"379","severity":1,"message":"460","line":8,"column":3,"nodeType":"381","messageId":"382","endLine":8,"endColumn":10},{"ruleId":"379","severity":1,"message":"461","line":11,"column":13,"nodeType":"381","messageId":"382","endLine":11,"endColumn":20},{"ruleId":"379","severity":1,"message":"462","line":12,"column":8,"nodeType":"381","messageId":"382","endLine":12,"endColumn":13},{"ruleId":"379","severity":1,"message":"463","line":13,"column":10,"nodeType":"381","messageId":"382","endLine":13,"endColumn":15},{"ruleId":"379","severity":1,"message":"394","line":3,"column":8,"nodeType":"381","messageId":"382","endLine":3,"endColumn":9},{"ruleId":"379","severity":1,"message":"464","line":12,"column":5,"nodeType":"381","messageId":"382","endLine":12,"endColumn":14},{"ruleId":"465","severity":1,"message":"466","line":33,"column":9,"nodeType":"399","endLine":33,"endColumn":40},{"ruleId":"379","severity":1,"message":"409","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":19},{"ruleId":"379","severity":1,"message":"410","line":3,"column":21,"nodeType":"381","messageId":"382","endLine":3,"endColumn":24},{"ruleId":"379","severity":1,"message":"411","line":3,"column":26,"nodeType":"381","messageId":"382","endLine":3,"endColumn":29},{"ruleId":"379","severity":1,"message":"380","line":3,"column":31,"nodeType":"381","messageId":"382","endLine":3,"endColumn":37},{"ruleId":"379","severity":1,"message":"467","line":46,"column":7,"nodeType":"381","messageId":"382","endLine":46,"endColumn":14},{"ruleId":"465","severity":1,"message":"466","line":60,"column":9,"nodeType":"399","endLine":60,"endColumn":40},{"ruleId":"379","severity":1,"message":"468","line":20,"column":9,"nodeType":"381","messageId":"382","endLine":20,"endColumn":18},{"ruleId":"379","severity":1,"message":"455","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"396","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":14},{"ruleId":"379","severity":1,"message":"413","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":17},{"ruleId":"379","severity":1,"message":"469","line":5,"column":8,"nodeType":"381","messageId":"382","endLine":5,"endColumn":16},{"ruleId":"379","severity":1,"message":"470","line":6,"column":8,"nodeType":"381","messageId":"382","endLine":6,"endColumn":15},{"ruleId":"379","severity":1,"message":"471","line":7,"column":8,"nodeType":"381","messageId":"382","endLine":7,"endColumn":15},{"ruleId":"379","severity":1,"message":"472","line":8,"column":8,"nodeType":"381","messageId":"382","endLine":8,"endColumn":22},{"ruleId":"379","severity":1,"message":"441","line":9,"column":8,"nodeType":"381","messageId":"382","endLine":9,"endColumn":18},{"ruleId":"379","severity":1,"message":"473","line":10,"column":8,"nodeType":"381","messageId":"382","endLine":10,"endColumn":16},{"ruleId":"379","severity":1,"message":"474","line":11,"column":8,"nodeType":"381","messageId":"382","endLine":11,"endColumn":17},{"ruleId":"379","severity":1,"message":"395","line":13,"column":10,"nodeType":"381","messageId":"382","endLine":13,"endColumn":24},{"ruleId":"379","severity":1,"message":"418","line":13,"column":26,"nodeType":"381","messageId":"382","endLine":13,"endColumn":38},{"ruleId":"379","severity":1,"message":"435","line":14,"column":10,"nodeType":"381","messageId":"382","endLine":14,"endColumn":22},{"ruleId":"379","severity":1,"message":"436","line":14,"column":24,"nodeType":"381","messageId":"382","endLine":14,"endColumn":35},{"ruleId":"379","severity":1,"message":"475","line":16,"column":3,"nodeType":"381","messageId":"382","endLine":16,"endColumn":12},{"ruleId":"379","severity":1,"message":"416","line":17,"column":3,"nodeType":"381","messageId":"382","endLine":17,"endColumn":11},{"ruleId":"379","severity":1,"message":"476","line":18,"column":3,"nodeType":"381","messageId":"382","endLine":18,"endColumn":11},{"ruleId":"379","severity":1,"message":"477","line":19,"column":3,"nodeType":"381","messageId":"382","endLine":19,"endColumn":14},{"ruleId":"379","severity":1,"message":"417","line":20,"column":3,"nodeType":"381","messageId":"382","endLine":20,"endColumn":13},{"ruleId":"379","severity":1,"message":"419","line":22,"column":10,"nodeType":"381","messageId":"382","endLine":22,"endColumn":20},{"ruleId":"379","severity":1,"message":"478","line":24,"column":8,"nodeType":"381","messageId":"382","endLine":24,"endColumn":20},{"ruleId":"379","severity":1,"message":"479","line":25,"column":8,"nodeType":"381","messageId":"382","endLine":25,"endColumn":16},{"ruleId":"379","severity":1,"message":"480","line":26,"column":10,"nodeType":"381","messageId":"382","endLine":26,"endColumn":19},{"ruleId":"379","severity":1,"message":"481","line":26,"column":21,"nodeType":"381","messageId":"382","endLine":26,"endColumn":39},{"ruleId":"379","severity":1,"message":"482","line":27,"column":10,"nodeType":"381","messageId":"382","endLine":27,"endColumn":25},{"ruleId":"379","severity":1,"message":"483","line":28,"column":10,"nodeType":"381","messageId":"382","endLine":28,"endColumn":18},{"ruleId":"379","severity":1,"message":"484","line":28,"column":20,"nodeType":"381","messageId":"382","endLine":28,"endColumn":26},{"ruleId":"379","severity":1,"message":"485","line":39,"column":10,"nodeType":"381","messageId":"382","endLine":39,"endColumn":16},{"ruleId":"379","severity":1,"message":"486","line":39,"column":18,"nodeType":"381","messageId":"382","endLine":39,"endColumn":27},{"ruleId":"400","severity":1,"message":"401","line":49,"column":17,"nodeType":"399","messageId":"402","endLine":49,"endColumn":82,"fix":"487"},{"ruleId":"400","severity":1,"message":"401","line":59,"column":17,"nodeType":"399","messageId":"402","endLine":59,"endColumn":82,"fix":"488"},{"ruleId":"400","severity":1,"message":"401","line":69,"column":17,"nodeType":"399","messageId":"402","endLine":69,"endColumn":82,"fix":"489"},{"ruleId":"400","severity":1,"message":"401","line":84,"column":17,"nodeType":"399","messageId":"402","endLine":84,"endColumn":89,"fix":"490"},{"ruleId":"400","severity":1,"message":"401","line":94,"column":17,"nodeType":"399","messageId":"402","endLine":94,"endColumn":88,"fix":"491"},{"ruleId":"379","severity":1,"message":"455","line":1,"column":27,"nodeType":"381","messageId":"382","endLine":1,"endColumn":36},{"ruleId":"379","severity":1,"message":"396","line":2,"column":10,"nodeType":"381","messageId":"382","endLine":2,"endColumn":14},{"ruleId":"379","severity":1,"message":"492","line":2,"column":16,"nodeType":"381","messageId":"382","endLine":2,"endColumn":23},{"ruleId":"379","severity":1,"message":"413","line":3,"column":10,"nodeType":"381","messageId":"382","endLine":3,"endColumn":17},{"ruleId":"379","severity":1,"message":"469","line":5,"column":8,"nodeType":"381","messageId":"382","endLine":5,"endColumn":16},{"ruleId":"379","severity":1,"message":"470","line":6,"column":8,"nodeType":"381","messageId":"382","endLine":6,"endColumn":15},{"ruleId":"379","severity":1,"message":"471","line":7,"column":8,"nodeType":"381","messageId":"382","endLine":7,"endColumn":15},{"ruleId":"379","severity":1,"message":"472","line":8,"column":8,"nodeType":"381","messageId":"382","endLine":8,"endColumn":22},{"ruleId":"379","severity":1,"message":"441","line":9,"column":8,"nodeType":"381","messageId":"382","endLine":9,"endColumn":18},{"ruleId":"379","severity":1,"message":"473","line":10,"column":8,"nodeType":"381","messageId":"382","endLine":10,"endColumn":16},{"ruleId":"379","severity":1,"message":"474","line":11,"column":8,"nodeType":"381","messageId":"382","endLine":11,"endColumn":17},{"ruleId":"379","severity":1,"message":"493","line":12,"column":8,"nodeType":"381","messageId":"382","endLine":12,"endColumn":22},{"ruleId":"379","severity":1,"message":"395","line":13,"column":10,"nodeType":"381","messageId":"382","endLine":13,"endColumn":24},{"ruleId":"379","severity":1,"message":"418","line":13,"column":26,"nodeType":"381","messageId":"382","endLine":13,"endColumn":38},{"ruleId":"379","severity":1,"message":"435","line":14,"column":10,"nodeType":"381","messageId":"382","endLine":14,"endColumn":22},{"ruleId":"379","severity":1,"message":"436","line":14,"column":24,"nodeType":"381","messageId":"382","endLine":14,"endColumn":35},{"ruleId":"379","severity":1,"message":"475","line":16,"column":3,"nodeType":"381","messageId":"382","endLine":16,"endColumn":12},{"ruleId":"379","severity":1,"message":"416","line":17,"column":3,"nodeType":"381","messageId":"382","endLine":17,"endColumn":11},{"ruleId":"379","severity":1,"message":"476","line":18,"column":3,"nodeType":"381","messageId":"382","endLine":18,"endColumn":11},{"ruleId":"379","severity":1,"message":"477","line":19,"column":3,"nodeType":"381","messageId":"382","endLine":19,"endColumn":14},{"ruleId":"379","severity":1,"message":"417","line":20,"column":3,"nodeType":"381","messageId":"382","endLine":20,"endColumn":13},{"ruleId":"379","severity":1,"message":"419","line":22,"column":10,"nodeType":"381","messageId":"382","endLine":22,"endColumn":20},{"ruleId":"379","severity":1,"message":"478","line":24,"column":8,"nodeType":"381","messageId":"382","endLine":24,"endColumn":20},{"ruleId":"379","severity":1,"message":"479","line":25,"column":8,"nodeType":"381","messageId":"382","endLine":25,"endColumn":16},{"ruleId":"379","severity":1,"message":"480","line":26,"column":10,"nodeType":"381","messageId":"382","endLine":26,"endColumn":19},{"ruleId":"379","severity":1,"message":"481","line":26,"column":21,"nodeType":"381","messageId":"382","endLine":26,"endColumn":39},{"ruleId":"379","severity":1,"message":"482","line":27,"column":10,"nodeType":"381","messageId":"382","endLine":27,"endColumn":25},{"ruleId":"379","severity":1,"message":"483","line":28,"column":10,"nodeType":"381","messageId":"382","endLine":28,"endColumn":18},{"ruleId":"379","severity":1,"message":"484","line":28,"column":20,"nodeType":"381","messageId":"382","endLine":28,"endColumn":26},{"ruleId":"379","severity":1,"message":"494","line":30,"column":8,"nodeType":"381","messageId":"382","endLine":30,"endColumn":11},{"ruleId":"379","severity":1,"message":"495","line":31,"column":8,"nodeType":"381","messageId":"382","endLine":31,"endColumn":11},{"ruleId":"379","severity":1,"message":"496","line":32,"column":8,"nodeType":"381","messageId":"382","endLine":32,"endColumn":17},{"ruleId":"379","severity":1,"message":"497","line":36,"column":10,"nodeType":"381","messageId":"382","endLine":36,"endColumn":23},{"ruleId":"379","severity":1,"message":"498","line":41,"column":9,"nodeType":"381","messageId":"382","endLine":41,"endColumn":30},{"ruleId":"400","severity":1,"message":"401","line":59,"column":29,"nodeType":"399","messageId":"402","endLine":59,"endColumn":101,"fix":"499"},{"ruleId":"400","severity":1,"message":"401","line":61,"column":42,"nodeType":"399","messageId":"402","endLine":61,"endColumn":113,"fix":"500"},{"ruleId":"400","severity":1,"message":"401","line":68,"column":136,"nodeType":"399","messageId":"402","endLine":68,"endColumn":186,"fix":"501"},{"ruleId":"400","severity":1,"message":"401","line":69,"column":97,"nodeType":"399","messageId":"402","endLine":69,"endColumn":147,"fix":"502"},{"ruleId":"400","severity":1,"message":"401","line":123,"column":17,"nodeType":"399","messageId":"402","endLine":123,"endColumn":88,"fix":"503"},{"ruleId":"400","severity":1,"message":"401","line":147,"column":94,"nodeType":"399","messageId":"402","endLine":147,"endColumn":145,"fix":"504"},{"ruleId":"400","severity":1,"message":"401","line":154,"column":318,"nodeType":"399","messageId":"402","endLine":154,"endColumn":389,"fix":"505"},{"ruleId":"400","severity":1,"message":"401","line":164,"column":55,"nodeType":"399","messageId":"402","endLine":164,"endColumn":105,"fix":"506"},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["509","510"],"'max' is assigned a value but never used.","no-extend-native","Object prototype is read only, properties should not be added.","CallExpression","unexpected","Array prototype is read only, properties should not be added.","'_' is defined but never used.","'fromXdcAddress' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"511","text":"512"},{"range":"513","text":"512"},{"range":"514","text":"512"},{"range":"515","text":"512"},{"range":"516","text":"512"},{"range":"517","text":"512"},"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'isAddress' is defined but never used.","'fromWei' is defined but never used.","'BUILD_BLOCK_LINK' is defined but never used.","'BUILD_TX_LINK' is defined but never used.","'EXPLORER' is defined but never used.","'RemoveExpo' is defined but never used.","'toXdcAddress' is defined but never used.","'LOADER_BOX' is defined but never used.","'toWei' is defined but never used.","'useState' is defined but never used.","'WalletConnectModal' is defined but never used.","'loginIcon' is defined but never used.","'signIcon' is defined but never used.","'faEllipsisH' is defined but never used.","'faExclamationTriangle' is defined but never used.","'faHome' is defined but never used.","'SubmitContractTxGeneral' is defined but never used.","'btn' is assigned a value but never used.",{"range":"518","text":"512"},{"range":"519","text":"512"},{"range":"520","text":"512"},{"range":"521","text":"512"},{"range":"522","text":"512"},"'FormatNumber' is defined but never used.","'FormatToken' is defined but never used.",{"range":"523","text":"512"},{"range":"524","text":"512"},{"range":"525","text":"512"},"'DECIMALS' is defined but never used.","'rocketIcon' is defined but never used.","'Options' is assigned a value but never used.",{"range":"526","text":"512"},"'nodeCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array. If 'filterData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["527"],{"range":"528","text":"512"},{"range":"529","text":"512"},"'PROJECT_NAME' is defined but never used.","'dcentBridge' is defined but never used.","'gasLimit' is assigned a value but never used.","'allAccounts' is assigned a value but never used.","'useEffect' is defined but never used.","'GetRevertReason' is defined but never used.","'CONTRACT_ABI' is defined but never used.","'CONTRACT_ADDRESS' is defined but never used.","'HTTP_PROVIDER' is defined but never used.","'LOADERS' is defined but never used.","'actions' is defined but never used.","'store' is defined but never used.","'toast' is defined but never used.","'addresses' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'btnName' is assigned a value but never used.","'submitBtn' is assigned a value but never used.","'FarmNode' is defined but never used.","'Staking' is defined but never used.","'Rewards' is defined but never used.","'HostingRewards' is defined but never used.","'tickIcon' is defined but never used.","'crossIcon' is defined but never used.","'ADDR_LINK' is defined but never used.","'Paginate' is defined but never used.","'PaginateNav' is defined but never used.","'GeneralModal' is defined but never used.","'WorldMap' is defined but never used.","'FlexTable' is defined but never used.","'InitStackableTable' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faSearch' is defined but never used.","'faStar' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.",{"range":"530","text":"512"},{"range":"531","text":"512"},{"range":"532","text":"512"},{"range":"533","text":"512"},{"range":"534","text":"512"},"'NavLink' is defined but never used.","'rightArrowIcon' is defined but never used.","'Nav' is defined but never used.","'Tab' is defined but never used.","'Accordion' is defined but never used.","'openAccordion' is assigned a value but never used.","'handleAccordionToggle' is assigned a value but never used.",{"range":"535","text":"512"},{"range":"536","text":"512"},{"range":"537","text":"512"},{"range":"538","text":"512"},{"range":"539","text":"512"},{"range":"540","text":"512"},{"range":"541","text":"512"},{"range":"542","text":"512"},"no-global-assign","no-unsafe-negation",{"messageId":"543","fix":"544","desc":"545"},{"messageId":"546","fix":"547","desc":"548"},[1839,1839]," rel=\"noreferrer\"",[2153,2153],[2482,2482],[2753,2753],[3008,3008],[3313,3313],[6449,6449],[6763,6763],[7005,7005],[7257,7257],[8514,8514],[676,676],[2108,2108],[2450,2450],[3250,3250],{"desc":"549","fix":"550"},[9893,9893],[10937,10937],[1852,1852],[2248,2248],[2645,2645],[3223,3223],[3624,3624],[2498,2498],[2687,2687],[3175,3175],[3381,3381],[6358,6358],[7758,7758],[8529,8529],[9220,9220],"removeEscape",{"range":"551","text":"552"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"553","text":"554"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [addrFilter, filterData]",{"range":"555","text":"556"},[1167,1168],"",[1167,1167],"\\",[7322,7334],"[addrFilter, filterData]"]