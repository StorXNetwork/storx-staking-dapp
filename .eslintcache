[{"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/index.js":"1","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/App.js":"2","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/reportWebVitals.js":"3","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/Header.js":"4","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/BalanceModal.js":"5","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/wallet-connect/walletConnect.js":"6","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/GeneralModal.js":"7","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/helpers/constant.js":"8","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/xinpay.js":"9","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/store.js":"10","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/actions/index.js":"11","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/middleware/networkValidator.js":"12","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/actions/types.js":"13","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/reducers/index.js":"14","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/reducers/WalletBalance.js":"15","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/reducers/Wallet.js":"16","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/middleware/getWalletDetails.js":"17","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/index.js":"18","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/metamask.js":"19","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/account.js":"20","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/wallet-connect/Keystore.js":"21","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/wallet-connect/PrivateKey.js":"22","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/helpers/crypto.js":"23","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/common.js":"24","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/HOC/RequireWallet.js":"25","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/NumberCard.js":"26","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/cacheBuster.js":"27","/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/Timer.js":"28","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/index.js":"29","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/reportWebVitals.js":"30","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/App.js":"31","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/store.js":"32","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/constant.js":"33","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/cacheBuster.js":"34","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/responsive.js":"35","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Header.js":"36","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/TxHistory.js":"37","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Footer.js":"38","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Staking/Staking.js":"39","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Dashboard/Dashboard.js":"40","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/HOC/RequireWallet.js":"41","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/middleware/networkValidator.js":"42","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/middleware/getWalletDetails.js":"43","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/index.js":"44","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/theme.js":"45","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Staking/Presentational.js":"46","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Staking/StakingForm.js":"47","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Dashboard/Presentational.js":"48","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/xinpay.js":"49","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/common.js":"50","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/BalanceModal.js":"51","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/wallet-connect/walletConnect.js":"52","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/index.js":"53","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/actions/types.js":"54","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/actions/index.js":"55","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/Wallet.js":"56","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/Theme.js":"57","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/WalletBalance.js":"58","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/decimal.js":"59","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/Timer.js":"60","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/crypto.js":"61","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/dcentInAppBrowser.js":"62","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/wallet-connect/Keystore.js":"63","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/wallet-connect/PrivateKey.js":"64","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/account.js":"65","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/dcentBridge.js":"66","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/WorldMap.js":"67","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/GeneralModal.js":"68"},{"size":760,"mtime":1624326920501,"results":"69","hashOfConfig":"70"},{"size":1444,"mtime":1624521081969,"results":"71","hashOfConfig":"70"},{"size":362,"mtime":1624323966048,"results":"72","hashOfConfig":"70"},{"size":3009,"mtime":1624530760047,"results":"73","hashOfConfig":"70"},{"size":975,"mtime":1624328385637,"results":"74","hashOfConfig":"70"},{"size":5090,"mtime":1624370197994,"results":"75","hashOfConfig":"70"},{"size":1530,"mtime":1624328393741,"results":"76","hashOfConfig":"70"},{"size":5539,"mtime":1624611675941,"results":"77","hashOfConfig":"70"},{"size":10004,"mtime":1624549516650,"results":"78","hashOfConfig":"70"},{"size":581,"mtime":1624324739330,"results":"79","hashOfConfig":"70"},{"size":1028,"mtime":1624518586492,"results":"80","hashOfConfig":"70"},{"size":916,"mtime":1624518821971,"results":"81","hashOfConfig":"70"},{"size":525,"mtime":1624324627246,"results":"82","hashOfConfig":"70"},{"size":167,"mtime":1624324758486,"results":"83","hashOfConfig":"70"},{"size":321,"mtime":1624324739326,"results":"84","hashOfConfig":"70"},{"size":1290,"mtime":1624338155213,"results":"85","hashOfConfig":"70"},{"size":1252,"mtime":1624517789766,"results":"86","hashOfConfig":"70"},{"size":3867,"mtime":1624549488786,"results":"87","hashOfConfig":"70"},{"size":5953,"mtime":1624329462716,"results":"88","hashOfConfig":"70"},{"size":3344,"mtime":1624550601003,"results":"89","hashOfConfig":"70"},{"size":2247,"mtime":1624367813789,"results":"90","hashOfConfig":"70"},{"size":1577,"mtime":1624338964645,"results":"91","hashOfConfig":"70"},{"size":3945,"mtime":1624550358250,"results":"92","hashOfConfig":"70"},{"size":498,"mtime":1624338886078,"results":"93","hashOfConfig":"70"},{"size":748,"mtime":1624324692110,"results":"94","hashOfConfig":"70"},{"size":1388,"mtime":1624517776654,"results":"95","hashOfConfig":"70"},{"size":2232,"mtime":1624466640728,"results":"96","hashOfConfig":"70"},{"size":601,"mtime":1624528741002,"results":"97","hashOfConfig":"70"},{"size":760,"mtime":1625654922986,"results":"98","hashOfConfig":"99"},{"size":362,"mtime":1625654922986,"results":"100","hashOfConfig":"99"},{"size":2007,"mtime":1625927172352,"results":"101","hashOfConfig":"99"},{"size":581,"mtime":1625654922986,"results":"102","hashOfConfig":"99"},{"size":6272,"mtime":1625674700027,"results":"103","hashOfConfig":"99"},{"size":2191,"mtime":1625674700023,"results":"104","hashOfConfig":"99"},{"size":2277,"mtime":1625778326850,"results":"105","hashOfConfig":"99"},{"size":5729,"mtime":1625674700023,"results":"106","hashOfConfig":"99"},{"size":3087,"mtime":1625654922982,"results":"107","hashOfConfig":"99"},{"size":2847,"mtime":1625674700023,"results":"108","hashOfConfig":"99"},{"size":5408,"mtime":1625734143042,"results":"109","hashOfConfig":"99"},{"size":935,"mtime":1626089618675,"results":"110","hashOfConfig":"99"},{"size":1501,"mtime":1625674700023,"results":"111","hashOfConfig":"99"},{"size":916,"mtime":1625654922986,"results":"112","hashOfConfig":"99"},{"size":1544,"mtime":1625674700027,"results":"113","hashOfConfig":"99"},{"size":212,"mtime":1625674700031,"results":"114","hashOfConfig":"99"},{"size":798,"mtime":1625674700027,"results":"115","hashOfConfig":"99"},{"size":7983,"mtime":1625751664551,"results":"116","hashOfConfig":"99"},{"size":5109,"mtime":1625851093176,"results":"117","hashOfConfig":"99"},{"size":10586,"mtime":1626094431495,"results":"118","hashOfConfig":"99"},{"size":10386,"mtime":1625674700031,"results":"119","hashOfConfig":"99"},{"size":498,"mtime":1625654922986,"results":"120","hashOfConfig":"99"},{"size":2849,"mtime":1625674700027,"results":"121","hashOfConfig":"99"},{"size":5166,"mtime":1625839745349,"results":"122","hashOfConfig":"99"},{"size":4101,"mtime":1625846252015,"results":"123","hashOfConfig":"99"},{"size":564,"mtime":1625674699967,"results":"124","hashOfConfig":"99"},{"size":1210,"mtime":1625674699967,"results":"125","hashOfConfig":"99"},{"size":1290,"mtime":1625654922986,"results":"126","hashOfConfig":"99"},{"size":518,"mtime":1625674700027,"results":"127","hashOfConfig":"99"},{"size":376,"mtime":1625674700031,"results":"128","hashOfConfig":"99"},{"size":465,"mtime":1625847535926,"results":"129","hashOfConfig":"99"},{"size":601,"mtime":1625654922986,"results":"130","hashOfConfig":"99"},{"size":3945,"mtime":1625654922986,"results":"131","hashOfConfig":"99"},{"size":4081,"mtime":1625847911258,"results":"132","hashOfConfig":"99"},{"size":2802,"mtime":1625732609366,"results":"133","hashOfConfig":"99"},{"size":2846,"mtime":1625676344738,"results":"134","hashOfConfig":"99"},{"size":3320,"mtime":1625654922986,"results":"135","hashOfConfig":"99"},{"size":764,"mtime":1625654922986,"results":"136","hashOfConfig":"99"},{"size":2953,"mtime":1626096422344,"results":"137","hashOfConfig":"99"},{"size":1534,"mtime":1626094176712,"results":"138","hashOfConfig":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"3h3gmy",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},"1mr0eis",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"199"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"199"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"218","usedDeprecatedRules":"199"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":"221","usedDeprecatedRules":"199"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"199"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"199"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"199"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"245","usedDeprecatedRules":"199"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"199"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"199"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"199"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"199"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"199"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"199"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"199"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"199"},"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/index.js",[],["294","295"],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/App.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/reportWebVitals.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/Header.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/BalanceModal.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/wallet-connect/walletConnect.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/GeneralModal.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/helpers/constant.js",["296","297","298"],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/xinpay.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/store.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/actions/index.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/middleware/networkValidator.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/actions/types.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/reducers/index.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/reducers/WalletBalance.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/redux/reducers/Wallet.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/middleware/getWalletDetails.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/index.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/metamask.js",[],["299","300"],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/wallets/account.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/wallet-connect/Keystore.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/wallet-connect/PrivateKey.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/helpers/crypto.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/common.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/HOC/RequireWallet.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/NumberCard.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/cacheBuster.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp/src/components/common/Timer.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/index.js",[],["301","302"],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/reportWebVitals.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/App.js",["303","304"],"import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\n/**\n *\n * @dev import components\n *\n */\n\nimport CacheBuster from \"./cacheBuster\";\nimport Header from \"./components/Header\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Footer from \"./components/Footer\";\nimport Staking from \"./components/Staking/Staking\";\nimport TxHistory from \"./components/TxHistory\";\n\n/**\n *\n * @dev import HOC\n *\n */\n\nimport RequireWallet from \"./components/HOC/RequireWallet\";\n\n/**\n *\n * @dev import CSS\n *\n */\n\nimport \"./assets/scss/main.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport packageJson from \"../package.json\";\nimport { PROJECT_NAME } from \"./helpers/constant\";\n\nimport { OnScroll, InitScrollToTop } from \"./helpers/responsive\";\nimport { Button } from \"react-bootstrap\";\n\nconst ComposedStaking = RequireWallet()(Staking);\n// const ComposedHistory = RequireWallet()(TxHistory);\n\nfunction App() {\n  useEffect(() => {\n    window.addEventListener(\"scroll\", OnScroll);\n    InitScrollToTop();\n\n    return () => {\n      window.removeEventListener(\"scroll\", OnScroll);\n    };\n  });\n\n  return (\n    <div className=\"app\">\n      <ToastContainer />\n      <CacheBuster>\n        {({ loading, isLatestVersion, refreshCacheAndReload }) => {\n          // console.log(\"[*] cache policy\", loading, isLatestVersion);\n          if (loading) return null;\n          console.log(`${PROJECT_NAME} UI Version:`, packageJson.version);\n          if (!loading && !isLatestVersion) {\n            // You can decide how and when you want to force reload\n            refreshCacheAndReload();\n          }\n\n          return null;\n        }}\n      </CacheBuster>\n\n      <Header />\n\n      {/* <Route exact path={\"/tx-history\"} component={ComposedHistory} /> */}\n      <Route exact path={\"/staking\"} component={ComposedStaking} />\n      <Route exact path={\"/\"} component={Dashboard} />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/store.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/constant.js",["305","306","307"],"import _ from \"lodash\";\nimport axios from \"axios\";\n\nimport StorX from \"../abi/StorX.json\";\nimport ReputationFeed from \"../abi/ReputationFeed.json\";\nimport Staking from \"../abi/Staking.json\";\n\nexport const PROJECT_NAME = \"StorX Staking\";\n\nexport const LOADERS = {\n  Xinpay: \"xinpay\",\n  Keystore: \"keystore\",\n  Privatekey: \"privatekey\",\n  MetaMask: \"metamask\",\n  DcentInApp: \"dcent-inapp\",\n  DcentBridge: \"dcent-bridge\",\n};\n\nexport const GetDefaultLoader = () =>\n  localStorage.getItem(\"default-loader\") || null;\nexport const GetDefaultPath = () =>\n  localStorage.getItem(\"default-path\") || null;\nexport const SetDefaultLoader = (loader) =>\n  localStorage.setItem(\"deafult-loader\", loader);\nexport const SetDefaultPath = (path) =>\n  localStorage.setItem(\"deafult-path\", path);\n\nexport const SubPath = \"/\";\n\nexport const RemoveExpo = (x) => {\n  var data = String(x).split(/[eE]/);\n  if (data.length === 1) return data[0];\n\n  var z = \"\",\n    sign = x < 0 ? \"-\" : \"\",\n    str = data[0].replace(\".\", \"\"),\n    mag = Number(data[1]) + 1;\n\n  if (mag < 0) {\n    z = sign + \"0.\";\n    while (mag++) z += \"0\";\n    return z + str.replace(/^\\-/, \"\");\n  }\n  mag -= str.length;\n  while (mag--) z += \"0\";\n  return str + z;\n};\n\nexport const CONTRACT_ADDRESS = {\n  storx: \"xdc5d5f074837f5d4618b3916ba74de1bf9662a3fed\",\n  reputation: \"xdc5db64839828174d2d29b419e5581c16c67d62046\",\n  staking: \"xdc02fe7b136f5dbff8d00546cb5af45afd1e1d350c\",\n};\n\nexport const CONTRACT_ABI = {\n  storx: StorX,\n  reputation: ReputationFeed,\n  staking: Staking,\n};\n\n/**\n * @constant VALID_CHAINS  correct chain id, in decimal\n */\n// export const VALID_CHAINS = [50, 51];\nexport const VALID_CHAINS = [50];\n\nexport const NETWORK_NAME = {\n  50: \"XinFin\",\n  51: \"Apothem\",\n};\n\nexport const CHAIN_DATA = {\n  50: \"https://explorer.xinfin.network\",\n  51: \"https://explorer.apothem.network\",\n};\n\nexport const HTTP_PROVIDER = {\n  50: \"https://rpc.xinfin.network\",\n  51: \"https://rpc.apothem.network\",\n};\n\nexport const BUILD_TX_LINK = (explorer, hash) => {\n  let retLink = `${explorer}`;\n\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\n  retLink += `tx/${hash}`;\n  return retLink;\n};\n\nexport const ADDR_LINK = (explorer, addr) => {\n  let retLink = `${explorer}`;\n\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\n  retLink += `addr/${addr}`;\n  return retLink;\n};\n\nexport const BUILD_BLOCK_LINK = (explorer, hash) => {\n  let retLink = `${explorer}`;\n\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\n  retLink += `block/${hash}`;\n  return retLink;\n};\n\nexport const DEFAULT_CHAIN_ID = 50;\nexport const DEFAULT_PROVIDER = HTTP_PROVIDER[VALID_CHAINS[0]];\n\nexport const REPUTATION_FEED_API =\n  process.env.REACT_APP_REPUTATION_API || \"http://localhost:3000\";\n\nexport const AxiosInstance = axios.create({\n  baseURL: REPUTATION_FEED_API,\n});\n\nexport const WS_PROVIDER = {};\n\nexport const ObjToArr = (obj) => Object.keys(obj).map((key) => obj[key]);\n\nexport const FilterStructResp = (obj) =>\n  Object.keys(obj)\n    .filter((e, i) => {\n      if (i < Object.keys(obj).length / 2) return false;\n      return true;\n    })\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nexport const IsHex = (n) => {\n  const re = /[0-9A-Fa-f]{6}/g;\n\n  if (re.test(n)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const GetTimerData = (seconds) => {\n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor(((seconds % 86400) % 3600) / 60);\n  const sec = Math.floor(((seconds % 86400) % 3600) % 60);\n  return { days, hours, minutes, seconds: sec };\n};\n\nexport const FormatSeconds = (seconds) => {\n  const { days, hours, minutes, seconds: sec } = GetTimerData(seconds);\n  return (\n    <span className=\"timer\">\n      <span className=\"days\">{days}</span>:\n      <span className=\"hours\">{hours}</span>:\n      <span className=\"minutes\">{minutes}</span>::\n      <span className=\"seconds\">{sec}</span>\n    </span>\n  );\n};\n\nexport const FormatSecondsTwo = (seconds) => {\n  const { days, hours, minutes, seconds: sec } = GetTimerData(seconds);\n  return (\n    <span className=\"timer\">\n      <span className=\"days\">D:&nbsp;{days}</span>&nbsp;&nbsp;\n      <span className=\"hours\">{ToDoubleDigit(hours)}</span>:\n      <span className=\"minutes\">{ToDoubleDigit(minutes)}</span>:\n      <span className=\"seconds\">{ToDoubleDigit(sec)}</span>\n    </span>\n  );\n};\n\nexport const ToDoubleDigit = (x) => {\n  x = `${x}`;\n  if (x.length === 1) return `0${x}`;\n  return x;\n};\n\nexport const AddMultiplier = (amount) => {\n  const multiplier = Math.pow(10, 18);\n\n  return RemoveExpo(parseFloat(amount) * multiplier);\n};\n\nexport const RemoveMultiplier = (amount) => {\n  const multiplier = Math.pow(10, 18);\n\n  return parseFloat(amount) / multiplier;\n};\n\nexport const TIMER_FORMAT = \"DD:HH:MM::SS\";\n\nexport const IsJson = (abi) => {\n  try {\n    JSON.parse(abi);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const Random = (min, max) => {\n  return min + Math.random() * (max - min);\n};\n\nexport const RandomInt = (min, max) => {\n  return Math.round(min + Math.random() * (max - min));\n};\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const EXPLORER = CHAIN_DATA[DEFAULT_CHAIN_ID];\n\nexport const DateStringFormat = (date) => {\n  date = new Date(date);\n  if (_.isDate(date))\n    return `${date.getDate()}-${\n      date.getMonth() + 1\n    }-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\n  return date;\n};\n\nexport const DECIMALS = {\n  SRX: 2,\n  XDC: 2,\n  native: 2,\n  tokens: 2,\n};\n\nexport const COIN_NAME = {\n  native: \"XDC\",\n  tokens: \"SRX\",\n};\n\nObject.defineProperty(Object.prototype, \"partialMatch\", {\n  value: function (fields) {\n    for (let key of Object.keys(fields)) {\n      if (Object.keys(this).includes(key)) {\n        if (this[key] === fields[key]) continue;\n        return false;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  },\n});\n\nObject.defineProperty(Array.prototype, \"includesPartial\", {\n  value: function (fields) {\n    for (let i = 0; i < this.length; i++) {\n      const obj = this[i];\n      console.log(\"objobj\", obj);\n      if (obj.partialMatch(fields)) {\n        return i;\n      }\n    }\n    return null;\n  },\n});\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/cacheBuster.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/responsive.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Header.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/TxHistory.js",["308","309"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { isAddress, fromWei } from \"xdc3-utils\";\n\nimport {\n  AxiosInstance,\n  BUILD_BLOCK_LINK,\n  BUILD_TX_LINK,\n  EXPLORER,\n  RemoveExpo,\n} from \"../helpers/constant\";\nimport { toXdcAddress } from \"../wallets/xinpay\";\n\nfunction formatValue(varName, value) {\n  if (isAddress(value)) return toXdcAddress(value);\n  if ([\"amount\", \"earnings\", \"principal\"].includes(varName))\n    return fromWei(RemoveExpo(value));\n}\n\nfunction renderReturnValues(returnValues) {\n  return (\n    <Container>\n      {Object.keys(returnValues)\n        .filter((x) => isNaN(x))\n        .map((v, i) => (\n          <Row key={i} style={{ textAlign: \"left\" }}>\n            <Col lg={4}>{v}</Col>\n            <Col lg={8}>{formatValue(v, returnValues[v])}</Col>\n          </Row>\n        ))}\n    </Container>\n  );\n}\n\nfunction RenderEvent(event, i) {\n  return (\n    <tr>\n      <td>{i + 1}</td>\n      <td>\n        <a target=\"_blank\" href={BUILD_BLOCK_LINK(EXPLORER, event.block)}>\n          {event.block}\n        </a>\n      </td>\n      <td>{event.name}</td>\n      <td>\n        <a target=\"_blank\" href={BUILD_TX_LINK(EXPLORER, event.tx_hash)}>\n          HASH LINK\n        </a>\n      </td>\n      <td>{renderReturnValues(event.data)}</td>\n    </tr>\n  );\n}\n\nfunction RenderAllEvents(events) {\n  if (events === null) return \"\";\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Sr.</th>\n          <th>Block Number</th>\n          <th>Name</th>\n          <th>Link</th>\n          <th>Data</th>\n        </tr>\n      </thead>\n      <tbody>{events.map((event, i) => RenderEvent(event, i))}</tbody>\n    </table>\n  );\n}\n\nclass TxHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.wallet, this.props.wallet)) {\n      // fetch events\n      this.getEvents();\n    }\n  }\n\n  getEvents() {\n    if (!this.props.wallet.address) return;\n    if (this.state.events !== null) return;\n    this.setState({ loading: true });\n    AxiosInstance.get(`/get-user-events/${this.props.wallet.address}`)\n      .then((resp) => {\n        const data = resp.data.data;\n        this.setState({ events: data, loading: false });\n      })\n      .catch((e) => {\n        console.log(e);\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    console.log(\"events\", this.state);\n    return (\n      <div className=\"component-panel event-history\">\n        <Container>\n          <Row>\n            <Col className=\"event-history__title\">TX History</Col>\n          </Row>\n\n          <Row>\n            <Col className=\"event-history__table\">\n              {RenderAllEvents(this.state.events)}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet }) {\n  return { wallet };\n}\n\nexport default connect(mapStateToProps)(TxHistory);\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Footer.js",["310","311","312","313","314","315","316","317"],"import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faLinkedin,\n  faFacebook,\n  faTelegram,\n  faGithub,\n  faReddit,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Foooter() {\n  return (\n    <>\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <div className=\"row footer-wrap\">\n            <div className=\"col-md-7\">\n              <p>\n                &copy;2021{\" \"}\n                <a href=\"https://storx.tech\" target=\"_blank\">\n                  StorX\n                </a>\n                . All Rights Reserved.\n              </p>\n            </div>\n            <div className=\"col-md-5\">\n              <div className=\"privacy-terms\">\n                <ul className=\"list-inline\">\n                  <li className=\"list-inline-item\">\n                    <a href=\"https://twitter.com/StorXNetwork\" target=\"_blank\">\n                      <FontAwesomeIcon size=\"lg\" icon={faTwitter} />\n                    </a>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a\n                      href=\"https://www.linkedin.com/company/storxnetwork\"\n                      target=\"_blank\"\n                    >\n                      <FontAwesomeIcon size=\"lg\" icon={faLinkedin} />\n                    </a>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a\n                      href=\"https://www.facebook.com/StorXNetwork\"\n                      target=\"_blank\"\n                    >\n                      <FontAwesomeIcon size=\"lg\" icon={faFacebook} />\n                    </a>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a href=\"https://t.me/StorXNetwork\" target=\"_blank\">\n                      <FontAwesomeIcon size=\"lg\" icon={faTelegram} />\n                    </a>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a href=\"https://github.com/StorXNetwork\" target=\"_blank\">\n                      <FontAwesomeIcon size=\"lg\" icon={faGithub} />\n                    </a>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <a\n                      href=\"https://www.reddit.com/r/StorXNetwork\"\n                      target=\"_blank\"\n                    >\n                      <FontAwesomeIcon size=\"lg\" icon={faReddit} />\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n\n      <a href=\"#\" className=\"back-to-top\" id=\"back-to-top\">\n        <FontAwesomeIcon size=\"xs\" icon={faArrowUp} />\n      </a>\n    </>\n  );\n}\n\nexport default React.memo(Foooter);\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Staking/Staking.js",["318","319","320","321","322"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { fromWei, toWei } from \"xdc3-utils\";\n\nimport { SubmitContractTxGeneral } from \"../../wallets\";\nimport { LOADER_BOX } from \"../common/common\";\nimport {\n  AxiosInstance,\n  CONTRACT_ADDRESS,\n  RemoveExpo,\n} from \"../../helpers/constant\";\nimport { InfoHeader, InfoCard } from \"./Presentational\";\nimport StakingForm from \"./StakingForm\";\n\nconst InitialState = {\n  stake: null,\n  loaded: false,\n  approvedAmount: 0,\n  stakingData: null,\n};\n\nclass Staking extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = InitialState;\n\n    this.getStakeDetail = this.getStakeDetail.bind(this);\n  }\n\n  componentDidMount() {\n    this.getStakeDetail();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.wallet.address !== this.props.wallet.address)\n      this.getStakeDetail();\n  }\n\n  getStakeDetail() {\n    if (!this.props.wallet.connected) return LOADER_BOX;\n\n    Promise.all([\n      SubmitContractTxGeneral(\n        \"stakes\",\n        { type: \"staking\" },\n        \"view\",\n        this.props.wallet.address\n      ),\n      SubmitContractTxGeneral(\n        \"earned\",\n        { type: \"staking\" },\n        \"view\",\n        this.props.wallet.address\n      ),\n      SubmitContractTxGeneral(\n        \"nextDripAt\",\n        { type: \"staking\" },\n        \"view\",\n        this.props.wallet.address\n      ),\n      SubmitContractTxGeneral(\n        \"allowance\",\n        { type: \"storx\" },\n        \"view\",\n        this.props.wallet.address,\n        CONTRACT_ADDRESS.staking\n      ),\n      AxiosInstance.get(\"/get-contract-data\"),\n      SubmitContractTxGeneral(\n        \"isStaker\",\n        { type: \"reputation\" },\n        \"view\",\n        this.props.wallet.address\n      ),\n      SubmitContractTxGeneral(\n        \"reputations\",\n        { type: \"reputation\" },\n        \"view\",\n        this.props.wallet.address\n      ),\n    ])\n      .then(\n        ([\n          x,\n          earned,\n          nextDripAt,\n          approvedAmount,\n          stakingData,\n          isStaker,\n          reputation,\n        ]) => {\n          const {\n            exists,\n            balance,\n            lastRedeemedAt,\n            unstakedTime,\n            staked,\n            totalRedeemed,\n            stakerHolder,\n            stakedAmount,\n            stakedTime,\n            unstaked,\n            ...rst\n          } = x;\n\n          this.setState(\n            {\n              loaded: true,\n              stake: {\n                exists,\n                balance,\n                lastRedeemedAt,\n                unstakedTime,\n                staked,\n                totalRedeemed,\n                stakerHolder,\n                stakedAmount,\n                stakedTime,\n                earned,\n                nextDripAt,\n                unstaked,\n                ...rst,\n              },\n              approvedAmount: fromWei(RemoveExpo(approvedAmount)),\n              stakingData: stakingData.data.data,\n              isStaker,\n              reputation,\n            },\n            () => {\n              if (unstaked) {\n                SubmitContractTxGeneral(\n                  \"canWithdrawStakeIn\",\n                  { type: \"staking\" },\n                  \"view\",\n                  this.props.wallet.address\n                ).then((x) => {\n                  console.log(\"canWithdrawStakeIn\", x);\n                  this.setState({\n                    stake: {\n                      ...this.state.stake,\n                      canWithdrawStakeIn: x,\n                    },\n                  });\n                });\n              }\n            }\n          );\n        }\n      )\n      .catch();\n  }\n\n  render() {\n    const reputation = this.state.isStaker\n      ? this.state.reputation\n      : \"NOT A STAKER\";\n\n    let stakeValidClass =\n      this.state.isStaker &&\n      this.state.reputation > this.state.stakingData.reputationThreshold\n        ? \"text-success\"\n        : \"text-danger\";\n\n    const stakeValid = this.state.stakingData\n      ? this.state.isStaker\n        ? (this.state.reputation > this.state.stakingData.reputationThreshold)\n            .toString()\n            .toUpperCase()\n        : \"NOT A STAKER\"\n      : LOADER_BOX;\n\n    return (\n      <>\n        <section className=\"block-overlap pb-3\">\n          <div className=\"container\">\n            <section className=\"bg-home bg-gradient red\" id=\"home\"></section>\n            <InfoHeader\n              stakingData={this.state.stakingData}\n              reputation={reputation}\n              stakeValid={stakeValid}\n              stakeValidClass={stakeValidClass}\n              wallet={this.props.wallet.address}\n            />\n            <div className=\"row mb-3\">\n              <div className=\"col-sm-12 col-md-6 col-lg-6 mb-3\">\n                <InfoCard data={this.state} />\n              </div>\n              <div className=\"col-sm-12 col-md-6 col-lg-6 mb-3\">\n                <StakingForm\n                  stake={this.state.stake}\n                  getStakeDetail={this.getStakeDetail}\n                  approvedAmount={this.state.approvedAmount}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n        <div className=\"staking-fillpage\"></div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet }) {\n  return { wallet };\n}\n\nexport default connect(mapStateToProps)(Staking);\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Dashboard/Dashboard.js",["323"],"import React from \"react\";\n\nimport { InitStackableTable, OnScroll } from \"../../helpers/responsive\";\nimport { AxiosInstance } from \"../../helpers/constant\";\n\nimport DashboardPresentation from \"./Presentational\";\n\nconst intialState = {\n  data: null,\n  node_data: null,\n};\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = intialState;\n  }\n\n  componentDidMount() {\n    AxiosInstance.get(\"/get-contract-data\")\n      .then((resp) => {\n        this.setState({ data: resp.data.data }, InitStackableTable);\n      })\n      .catch(console.error);\n\n    AxiosInstance.get(\"/get-node-coordinates\")\n      .then((resp) => {\n        this.setState({ node_data: resp.data.data });\n      })\n      .catch(console.error);\n  }\n\n  render() {\n    return (\n      <DashboardPresentation\n        data={this.state.data}\n        node_data={this.state.node_data}\n      />\n    );\n  }\n}\n\nexport default Dashboard;\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/HOC/RequireWallet.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/middleware/networkValidator.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/middleware/getWalletDetails.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/index.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/theme.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Staking/Presentational.js",["324"],"import React from \"react\";\nimport { fromWei, toXdcAddress } from \"xdc3-utils\";\n\nimport { DateStringFormat, DECIMALS, RemoveExpo } from \"../../helpers/constant\";\nimport { FormatNumber, FormatToken } from \"../../helpers/decimal\";\nimport { LOADER_BOX } from \"../common/common\";\nimport Timer from \"../common/Timer\";\n\nfunction GetStatusPill(status) {\n  if (status) {\n    return (\n      <span className=\"badge badge-success badge-pill u-uppercase\">\n        {`${status}`}\n      </span>\n    );\n  }\n  return (\n    <span className=\"badge badge-danger badge-pill u-uppercase\">\n      {\" \"}\n      {`${status}`}\n    </span>\n  );\n}\n\nexport function InfoCard({ data }) {\n  const staked = data.stake ? GetStatusPill(data.stake.staked) : LOADER_BOX;\n  const stakedAmount = data.stake\n    ? FormatToken(data.stake.stakedAmount)\n    : LOADER_BOX;\n  const earned = data.stake ? FormatToken(data.stake.earned) : LOADER_BOX;\n  const totalRedeemed = data.stake ? FormatToken(data.stake.totalRedeemed) : LOADER_BOX;\n  const lastRedeemedAt = data.stake\n    ? DateStringFormat(data.stake.lastRedeemedAt * 1000)\n    : LOADER_BOX;\n  const nextDripAt = data.stake ? (\n    <Timer endDate={data.stake.nextDripAt * 1000} />\n  ) : (\n    LOADER_BOX\n  );\n\n  return (\n    <>\n      <div className=\"stats-box p-4\">\n        <h5 className=\"mb-2\">Stake Details</h5>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            Staked {staked}\n          </li>\n\n          {data.stake && data.stake.staked ? (\n            <>\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                Staked Amount <span className=\"\">{stakedAmount}</span>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                Current Earnings <span className=\"\">{earned}</span>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                Rewards Redeemed<span className=\"\">{totalRedeemed}</span>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                Last Rewards <span className=\"\">{lastRedeemedAt}</span>\n              </li>\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                Next Rewards <span className=\"\">{nextDripAt}</span>\n              </li>\n            </>\n          ) : (\n            \"\"\n          )}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport function InfoHeader({ stakingData, wallet, reputation, stakeValid, stakeValidClass }) {\n  return (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"col-sm-12 col-md-12 col-lg-12\">\n          <div className=\"stats-box p-4\">\n            <h5>\n              {wallet ? (\n                <>\n                  Wallet:{\" \"}\n                  <span className=\"walletAddress\">{toXdcAddress(wallet)}</span>\n                </>\n              ) : (\n                LOADER_BOX\n              )}\n            </h5>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-lg-12 mb-3\">\n          <div className=\"stats-box p-4\">\n            <div className=\"row staking-counter\">\n              <div className=\"col ver-divider safari-float-left\">\n                <div className=\"media align-items-center\">\n                  <div className=\"media-body text-center\">\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\n                      Minimum\n                      <br />\n                      Reputation\n                    </h2>\n                    <p>\n                      <span className=\"counter\">\n                        {stakingData\n                          ? FormatNumber(stakingData.reputationThreshold)\n                          : LOADER_BOX}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col ver-divider safari-float-left\">\n                <div className=\"media align-items-center\">\n                  <div className=\"media-body text-center\">\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\n                      Minimum\n                      <br />\n                      Stake Amount\n                    </h2>\n                    <p>\n                      <span className=\"counter\">\n                        {stakingData\n                          ? FormatNumber(\n                              fromWei(\n                                RemoveExpo(stakingData.minStakeAmount + \"\")\n                              )\n                            )\n                          : LOADER_BOX}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col ver-divider safari-float-left\">\n                <div className=\"media align-items-center\">\n                  <div className=\"media-body text-center\">\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\n                      Maximum\n                      <br />\n                      Stake Amount\n                    </h2>\n                    <p>\n                      <span className=\"counter\">\n                        {stakingData\n                          ? FormatNumber(\n                              fromWei(RemoveExpo(stakingData.maxStakeAmount))\n                            )\n                          : LOADER_BOX}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col ver-divider safari-float-left\">\n                <div className=\"media align-items-center\">\n                  <div className=\"media-body text-center\">\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\n                      Current\n                      <br />\n                      Reputation\n                    </h2>\n                    <p>\n                      <span className=\"counter\">\n                        {reputation ? reputation : LOADER_BOX}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col ver-divider safari-float-left\">\n                <div className=\"media align-items-center\">\n                  <div className=\"media-body text-center\">\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\n                      Hosting\n                      <br />\n                      Rewards\n                    </h2>\n                    <p>\n                      <span className=\"counter\">\n                        {stakingData\n                          ? FormatNumber(\n                              fromWei(\n                                RemoveExpo(stakingData.hostingCompensation)\n                              )\n                            )\n                          : LOADER_BOX}\n                      </span>{\" \"}\n                      SRX P.A\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col ver-divider safari-float-left\">\n                <div className=\"media align-items-center\">\n                  <div className=\"media-body text-center\">\n                    <h2 className=\"font-size-1 text-uppercase text-secondary mb-1\">\n                      Farmer Node\n                      <br />\n                      Status\n                    </h2>\n                    <p className={stakeValidClass}>\n                      {stakeValid ? stakeValid : LOADER_BOX}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Staking/StakingForm.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/Dashboard/Presentational.js",["325"],"import React from \"react\";\n\nimport { fromWei } from \"xdc3-utils\";\n\nimport FarmNode from \"../../assets/img/icons/farmnodes.png\";\nimport Staking from \"../../assets/img/icons/staking.png\";\nimport Rewards from \"../../assets/img/icons/staking-rewards.png\";\nimport HostingRewards from \"../../assets/img/icons/hosting-rewards.png\";\nimport { toXdcAddress } from \"../../wallets/xinpay\";\nimport { FormatNumber, FormatToken } from \"../../helpers/decimal\";\nimport { ADDR_LINK, EXPLORER, RemoveExpo } from \"../../helpers/constant\";\nimport { LOADER_BOX } from \"../common/common\";\n\nimport GeneralModal from \"../common/GeneralModal\";\nimport WorldMap from \"../common/WorldMap\";\n\nfunction RenderRows(holders, reputationThreshold) {\n  if (!holders)\n    return (\n      <tr>\n        <td className=\"u-text-center\" style={{ maxWidth: \"100%\" }} colSpan={4}>\n          LOADING\n        </td>\n      </tr>\n    );\n\n  const nodes = [];\n\n  for (let i = 0; i < holders.length; i++) {\n    const data = holders[i];\n    const status =\n      reputationThreshold <= data.reputation ? (\n        <span className=\"btn btn-farmnode\">Active</span>\n      ) : (\n        <span className=\"btn btn-slashed\">Inactive</span>\n      );\n\n    nodes.push(\n      <tr className=\"hover-grow\" key={i + \"stake-holder\"}>\n        <td className=\"truncate\">\n          <a\n            target=\"_blank\"\n            href={ADDR_LINK(EXPLORER, toXdcAddress(data.stake.stakerHolder))}\n          >\n            {toXdcAddress(data.stake.stakerHolder)}\n          </a>\n        </td>\n        {/* <td>{data.data.address}</td> */}\n        <td>{FormatNumber(fromWei(data.stake.stakedAmount))} SRX</td>\n        <td>\n          <div className=\"notify masternode\">\n            <span className=\"heartbit\"></span>\n            <span className=\"point\"></span>\n          </div>\n          {FormatNumber(data.reputation)}\n        </td>\n        <td>{status}</td>\n      </tr>\n    );\n  }\n\n  return nodes;\n}\n\nfunction DashboardPresentation({ data, node_data }) {\n  const nodeCount = data ? Object.keys(data.stakeHolders).length : LOADER_BOX;\n  const stakeholder = data\n    ? Object.keys(data.stakeHolders).map((x) => data.stakeHolders[x])\n    : null;\n  const reputationThreshold = data ? data.reputationThreshold : null;\n\n  const totalStaked = data\n    ? FormatNumber(FormatToken(data.totalStaked + \"\"))\n    : LOADER_BOX;\n  const hostingRewards = data\n    ? FormatNumber(fromWei(RemoveExpo(data.hostingCompensation) + \"\"))\n    : LOADER_BOX;\n\n  const stakingRewwards = data\n    ? data.interest / data.interestPrecision\n    : LOADER_BOX;\n\n  return (\n    <>\n      <section className=\"bg-home bg-gradient red\" id=\"home\">\n        <div id=\"particles-js\" className=\"particles-js\"></div>\n      </section>\n\n      <section className=\"block-overlap\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 mb-3\">\n              <h3 className=\"header-stats\">Statistics</h3>\n              <div className=\"stats-box h-0 p-3 pt-4 pb-4\">\n                <div className=\"row stats-counter\">\n                  <div className=\"col-sm-6 col-md-6 col-lg-6 ver-divider ver-divider_none-md safari-float-left\">\n                    <div className=\"media align-items-center\">\n                      <figure className=\"sm-avatar mr-2\">\n                        <div className=\"xs-avatar mx-auto\">\n                          <img\n                            src={FarmNode}\n                            className=\"img-fluid\"\n                            alt=\"Current Block\"\n                          />\n                        </div>\n                      </figure>\n                      <div className=\"media-body\">\n                        <h2 className=\"font-size-1 text-uppercase text-secondary mb-0\">\n                          Farm/Storage Nodes\n                        </h2>\n                        <p>\n                          <span className=\"counter\">{nodeCount}</span> ({\" \"}\n                          <span>\n                            <GeneralModal\n                              centered={true}\n                              modalClass=\"map-modal\"\n                              btnElement={\"div\"}\n                              btnName=\"View All\"\n                              btnProps={{ className: \"map-button\" }}\n                              footer={\n                                <div>Total Store Providers: {nodeCount}</div>\n                              }\n                            >\n                              <WorldMap data={node_data} />\n                            </GeneralModal>\n                          </span>{\" \"}\n                          )\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6 col-md-6 col-lg-6 ver-divider ver-divider_none-md safari-float-left\">\n                    <div className=\"media align-items-center\">\n                      <figure className=\"sm-avatar mr-2\">\n                        <div className=\"xs-avatar mx-auto\">\n                          <img\n                            src={Staking}\n                            className=\"img-fluid\"\n                            alt=\"Epoch\"\n                          />\n                        </div>\n                      </figure>\n                      <div className=\"media-body\">\n                        <h2 className=\"font-size-1 text-uppercase text-secondary mb-0\">\n                          SRX Staked\n                        </h2>\n                        <p>\n                          <span className=\"counter\">{totalStaked}</span>{\" \"}\n                          <span className=\"small\">SRX</span>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-lg-6 mb-3\">\n              <h3 className=\"header-stats\">Rewards</h3>\n              <div className=\"stats-box h-0 p-3 pt-4 pb-4\">\n                <div className=\"row stats-counter\">\n                  <div className=\"col-sm-6 col-md-6 col-lg-6 ver-divider plus ver-divider_none-md safari-float-left\">\n                    <div className=\"media align-items-center\">\n                      <figure className=\"sm-avatar mr-2\">\n                        <div className=\"xs-avatar mx-auto\">\n                          <img\n                            src={HostingRewards}\n                            className=\"img-fluid\"\n                            alt=\"Next Checkpoint\"\n                          />\n                        </div>\n                      </figure>\n                      <div className=\"media-body\">\n                        <h2 className=\"font-size-1 text-uppercase text-secondary mb-0\">\n                          Hosting Rewards\n                        </h2>\n                        <p>\n                          <span className=\"counter\">{hostingRewards}</span>{\" \"}\n                          <span className=\"small\">SRX/PA</span>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6 col-md-6 col-lg-6 ver-divider plus ver-divider_none-md safari-float-left\">\n                    <div className=\"media align-items-center\">\n                      <figure className=\"sm-avatar mr-2\">\n                        <div className=\"xs-avatar mx-auto\">\n                          <img\n                            src={Rewards}\n                            className=\"img-fluid\"\n                            alt=\"Next Checkpoint\"\n                          />\n                        </div>\n                      </figure>\n                      <div className=\"media-body\">\n                        <h2 className=\"font-size-1 text-uppercase text-secondary mb-0\">\n                          Staking Rewards\n                        </h2>\n                        <p>\n                          <span className=\"counter\">{stakingRewwards}</span>%{\" \"}\n                          <span className=\"small\">P.A (approx)</span>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"section-sm\" id=\"farmnode\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"farmnodes-tabbed-section\">\n              <div className=\"col-lg-12\">\n                <div className=\"ticker-head mb-2\">\n                  <ul\n                    className=\"nav nav-tabs ticker-nav form-tabs\"\n                    role=\"tablist\"\n                  >\n                    <li className=\"nav-item mb-3\">\n                      <a\n                        className=\"nav-link active show\"\n                        href=\"#tab1\"\n                        role=\"tab\"\n                        data-toggle=\"tab\"\n                        aria-selected=\"true\"\n                      >\n                        Farm/Storage Nodes ( {`${nodeCount}`} )\n                      </a>\n                    </li>\n                  </ul>\n                  {/* <div className=\"d-sm-none\">\n                <select className=\"mb10 form-control\" id=\"tab_selector\">\n                  <option value=\"0\">Farm Nodes (6)</option>\n                  <option value=\"1\">Slashed Nodes (4)</option>\n                  <option value=\"2\">Resigned Nodes (3)</option>\n                </select>\n              </div> */}\n                </div>\n              </div>\n\n              <div className=\"col-lg-12\">\n                <div className=\"tab-content\">\n                  <div\n                    role=\"tabpanel\"\n                    className=\"tab-pane fade in active show\"\n                    id=\"tab1\"\n                  >\n                    <table className=\"table table-responsive-stack\">\n                      <thead>\n                        <tr>\n                          <th>FARM NODE ADDRESS</th>\n                          {/* <th>NODE IP</th> */}\n                          <th>STAKED AMOUNT</th>\n                          <th>REPUTATION</th>\n                          <th>STATUS</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {RenderRows(stakeholder, reputationThreshold)}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default React.memo(DashboardPresentation);\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/xinpay.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/common.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/BalanceModal.js",["326","327","328","329"],"import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { fromWei } from \"xdc3-utils\";\n\nimport XdcLogo from \"../../assets/img/wallets/xdc-logo.png\";\nimport SrxLogo from \"../../assets/img/wallets/storx-logo.png\";\nimport { DECIMALS, RemoveExpo } from \"../../helpers/constant\";\nimport { FormatNumber, FormatToken } from \"../../helpers/decimal\";\n\nconst BalanceModal = ({ data }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const content = (\n    <div className=\"modal-content\">\n      <div className=\"modal-header border-bottom-0\">\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n          Wallet Balance\n        </h5>\n        <button\n          type=\"button\"\n          className=\"close no-outline\"\n          onClick={handleClose}\n          aria-label=\"Close\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <ul className=\"list-group\">\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            <div className=\"wallet-icon-block\">\n              <div className=\"wallet-icon\" style={{ float: \"left\" }}>\n                <img src={XdcLogo} alt=\"XDC\" />\n              </div>\n              <div style={{ marginLeft: \"45px\" }}>\n                <h5>XDC</h5>\n                <p>XinFin Network</p>\n              </div>\n            </div>\n            <div className=\"wallet-icon-block text-right\">\n              <h5>{FormatToken(data.xdc.amount)}</h5>\n              <p>{FormatToken(data.xdc.total)} $</p>\n            </div>\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            <div className=\"wallet-icon-block\">\n              <div className=\"wallet-icon\" style={{ float: \"left\" }}>\n                <img src={SrxLogo} alt=\"SRX\" />\n              </div>\n              <div style={{ marginLeft: \"45px\" }}>\n                <h5>SRX</h5>\n                <p>StorX&nbsp;Network</p>\n              </div>\n            </div>\n            <div className=\"wallet-icon-block text-right\">\n              <h5>{FormatToken(data.srx.amount)}</h5>\n              <p>{FormatToken(data.srx.total)} $</p>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div className=\"modal-footer border-top-0 d-flex justify-content-center\">\n        <button type=\"button\" className=\"back\" onClick={handleClose}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div onClick={handleShow} className=\"btn nav-link\">\n        Balance\n      </div>\n      <Modal centered={true} show={showModal} onHide={handleClose}>\n        {content}\n      </Modal>\n    </>\n  );\n};\n\nexport default BalanceModal;\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/wallet-connect/walletConnect.js",["330","331","332","333","334"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\n\nimport Keystore from \"./Keystore\";\nimport PrivateKey from \"./PrivateKey\";\n\nimport { PROJECT_NAME, DEFAULT_CHAIN_ID } from \"../../helpers/constant\";\nimport { initXdc3 } from \"../../wallets/xinpay\";\nimport * as actions from \"../../actions\";\n\nimport XinpayLogo from \"../../assets/img/wallets/xinpay-logo.png\";\nimport PrivateKeyLogo from \"../../assets/img/wallets/privatekey-logo.png\";\nimport KeystoreLogo from \"../../assets/img/wallets/keystore-logo.png\";\nimport DcentLogo from \"../../assets/img/wallets/dcent-logo.png\";\n\nimport { toast } from \"react-toastify\";\nimport { initDcent } from \"../../wallets/dcentInAppBrowser\";\n\nconst Provider = {\n  menu: \"menu\",\n  keystore: \"keystore\",\n  privateKey: \"privatekey\",\n};\n\nclass WalletConnect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      providerSelected: Provider.menu,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.wallet.connected !== this.props.wallet.connected &&\n      this.props.wallet.connected\n    ) {\n      this.setState({ showModal: false });\n    }\n  }\n\n  accountCallback = (loader) => (account) => {\n    if (account === null)\n      toast(\"error while loading wallet\", { autoClose: 2000, type: \"error\" });\n    else {\n      this.props.WalletConnected({\n        account,\n        chain_id: DEFAULT_CHAIN_ID,\n        address: account.address,\n        loader,\n      });\n      this.setState({ showModal: false, providerSelected: Provider.menu });\n    }\n  };\n\n  RenderWalletProvider() {\n    if (this.state.providerSelected === Provider.menu)\n      return (\n        <div className=\"modal-content\">\n          <div className=\"modal-header border-bottom-0\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Connect to a wallet\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => this.setState({ showModal: false })}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"wallet-connect-block\">\n              <button onClick={initXdc3} className=\"wallect-connect-btn\">\n                <div className=\"wallet-name\">\n                  <h4>XinPay</h4>\n                </div>\n                <div className=\"wallet-icon\">\n                  <img src={XinpayLogo} alt=\"Icon\" />\n                </div>\n              </button>\n              <button\n                className=\"wallect-connect-btn\"\n                onClick={() =>\n                  this.setState({ providerSelected: Provider.privateKey })\n                }\n              >\n                <div className=\"wallet-name\">\n                  <h4>Private Key</h4>\n                </div>\n                <div className=\"wallet-icon\">\n                  <img src={PrivateKeyLogo} alt=\"Icon\" />\n                </div>\n              </button>\n              <button\n                className=\"wallect-connect-btn\"\n                onClick={() =>\n                  this.setState({ providerSelected: Provider.keystore })\n                }\n              >\n                <div className=\"wallet-name\">\n                  <h4>Key Store</h4>\n                </div>\n                <div className=\"wallet-icon\">\n                  <img src={KeystoreLogo} alt=\"Icon\" />\n                </div>\n              </button>\n              <button className=\"wallect-connect-btn\" onClick={initDcent}>\n                <div className=\"wallet-name\">\n                  <h4>D'CENT</h4>\n                </div>\n                <div className=\"wallet-icon\">\n                  <img src={DcentLogo} alt=\"Icon\" />\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n\n    if (this.state.providerSelected === Provider.keystore)\n      return (\n        <Keystore\n          back={() => this.setState({ providerSelected: Provider.menu })}\n          cb={this.accountCallback(Provider.keystore)}\n        />\n      );\n\n    if (this.state.providerSelected === Provider.privateKey)\n      return (\n        <PrivateKey\n          back={() => this.setState({ providerSelected: Provider.menu })}\n          cb={this.accountCallback(Provider.privateKey)}\n        />\n      );\n  }\n\n  render() {\n    const BTN_MSG = this.props.btnName || \"CONNECT\";\n    const BTN_CLASS = this.props.btnClass || \"btn nav-link\";\n    const disabled = this.props.disabled || false;\n\n    return (\n      <>\n        <div\n          className={BTN_CLASS}\n          onClick={() => this.setState({ showModal: true })}\n          disabled={disabled}\n        >\n          {BTN_MSG}\n        </div>\n        <Modal\n          centered={true}\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n        >\n          {this.RenderWalletProvider()}\n        </Modal>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet }) {\n  return { wallet };\n}\n\nexport default connect(mapStateToProps, actions)(WalletConnect);\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/index.js",["335"],"import Xdc3 from \"xdc3\";\nimport { toast } from \"react-toastify\";\n\nimport * as xinpay from \"./xinpay\";\nimport * as account from \"./account\";\nimport * as dcentBridge from \"./dcentBridge\";\nimport * as dcentInApp from \"./dcentInAppBrowser\";\n\nimport store from \"../redux/store\";\nimport { EXPLORER, LOADERS, DEFAULT_PROVIDER, BUILD_TX_LINK } from \"../helpers/constant\";\n\nfunction GetFuncFromLoader(loader) {\n  switch (loader) {\n    case LOADERS.Xinpay:\n      return xinpay;\n    case LOADERS.Keystore:\n      return account;\n    case LOADERS.Privatekey:\n      return account;\n    case LOADERS.DcentInApp:\n      return dcentInApp;\n    default:\n      return xinpay;\n  }\n}\n\n/**\n *\n *\n * @note directly get from default provider\n *\n */\nexport function GetNativeBalance() {\n  return new Promise((resolve, reject) => {\n    const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(DEFAULT_PROVIDER));\n    const wallet = store.getState();\n    const address = wallet.wallet.address;\n    xdc3.eth.getBalance(address).then(resolve).catch(reject);\n  });\n}\n\nexport function IsLocked(...params) {\n  return new Promise((resolve, reject) => {\n    const wallet = store.getState();\n    GetFuncFromLoader(wallet.wallet.chain_id)\n      .IsLocked(...params)\n      .then((resp) => {\n        resolve(resp);\n      })\n      .catch((e) => {\n        console.log(\"resp\", IsJsonRpcError(e));\n        console.log(\"resp\", e);\n        reject(e);\n      });\n  });\n}\n\nexport function SubmitContractTxGeneral(...params) {\n  return new Promise((resolve, reject) => {\n    const wallet = store.getState();\n    let toastId;\n    if (params[2] !== \"view\")\n      toastId = toast(\"Processing TX ...\", {\n        position: \"bottom-right\",\n        type: \"processing-tx\",\n        autoClose: false,\n        hideProgressBar: false,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n        closeButton: false,\n      });\n\n    GetFuncFromLoader(wallet.wallet.loader)\n      .SubmitContractTxGeneral(...params)\n      .then((resp) => {\n        if (resp.transactionHash) {\n          const { transactionHash } = resp;\n          toast(\n            <div>\n              Sucsess&nbsp;\n              <a\n                href={BUILD_TX_LINK(EXPLORER, transactionHash)}\n                // href={`${EXPLORER}/tx/${transactionHash}`}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                HASH\n              </a>\n            </div>,\n            {\n              position: \"bottom-right\",\n              type: \"success-tx\",\n              autoClose: false,\n              hideProgressBar: false,\n              closeButton: true,\n              closeOnClick: false,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            }\n          );\n        }\n\n        resolve(resp);\n      })\n      .catch((e) => {\n        console.log(\"resp\", IsJsonRpcError(e));\n        console.log(\"resp\", e, e.message);\n        const message = e.message || <>Failing Transaction</>;\n        toast(\n          <div>\n            <b>Error</b>:{message}\n          </div>,\n          {\n            position: \"bottom-right\",\n            type: \"error\",\n            autoClose: false,\n            hideProgressBar: false,\n            closeButton: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }\n        );\n        reject(e);\n      })\n      .finally(() => {\n        if (toastId) toast.dismiss(toastId);\n      });\n  });\n}\n\nexport async function GetFromAddress(hash) {\n  const wallet = store.getState();\n  return await GetFuncFromLoader(wallet.wallet.chain_id).GetFromAddress(hash);\n}\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const GetJsonRpcError = (err) => {\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\n};\n\nexport const IsAddressEqual = (a, b) => {\n  a = xinpay.fromXdcAddress(a).toLowerCase();\n  b = xinpay.fromXdcAddress(b).toLowerCase();\n  return a === b;\n};\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/actions/types.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/actions/index.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/Wallet.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/Theme.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/redux/reducers/WalletBalance.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/decimal.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/Timer.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/helpers/crypto.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/dcentInAppBrowser.js",["336","337"],"import Xdc3 from \"xdc3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport _ from \"lodash\";\n\nimport { CONTRACT_ABI, CONTRACT_ADDRESS, LOADERS } from \"../helpers/constant\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\nimport { toast } from \"react-toastify\";\nimport { toXdcAddress } from \"./xinpay\";\n\nlet addresses, xdc3;\n\nexport const DcentSupported = () => {\n  return window.ethereum && window.ethereum.isDcentWallet === true;\n};\n\nexport const GetChainId = () => {\n  return window.ethereum.request({ method: \"net_version\" });\n};\n\nexport async function GetProvider() {\n  const provider = await detectEthereumProvider();\n  return provider;\n}\n\nexport const initDcent = async () => {\n  try {\n    const isSupported = DcentSupported();\n    if (!isSupported) {\n      toast(\n        \"Browser doesn't support DCent wallet, please open in In-App Browser of DCent\"\n      );\n      return store.dispatch(actions.WalletDisconnected());\n    }\n    await window.ethereum.request({ method: \"eth_requestAccounts\" });\n    xdc3 = new Xdc3(await GetProvider());\n    _initListerner();\n    const chain_id = await xdc3.eth.getChainId();\n    const accounts = await xdc3.eth.getAccounts();\n    console.log(\"chain_id\", chain_id, accounts);\n    return store.dispatch(\n      actions.WalletConnected({\n        address: accounts[0],\n        chain_id,\n        loader: LOADERS.DcentInApp,\n      })\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport function _initListerner() {\n  window.ethereum.removeAllListeners();\n\n  window.ethereum.on(\"accountsChanged\", async (data) => {\n    const accounts = await xdc3.eth.getAccounts();\n    addresses = accounts;\n    store.dispatch(actions.AccountChanged(accounts[0]));\n  });\n\n  window.ethereum.on(\"chainChanged\", async (data) => {\n    const chain_id = await xdc3.eth.getChainId();\n    store.dispatch(actions.NetworkChanged(chain_id));\n  });\n\n  window.ethereum.on(\"connect\", async (data) => {\n    xdc3 = new Xdc3(await GetProvider());\n    const accounts = await xdc3.eth.getAccounts();\n    const chain_id = await xdc3.eth.getChainId();\n    addresses = accounts;\n    return store.dispatch(\n      actions.WalletConnected({\n        address: accounts[0],\n        chain_id,\n        loader: LOADERS.DcentInApp,\n      })\n    );\n  });\n\n  window.ethereum.on(\"disconnect\", (data) => {\n    console.log(\"disconnect\", data);\n    return store.dispatch(actions.WalletDisconnected());\n  });\n\n  window.ethereum.on(\"message\", (data) => {\n    console.log(\"message\", data);\n  });\n}\n\nexport async function SubmitContractTxGeneral(\n  method,\n  { type },\n  stateMutability,\n  ...params\n) {\n  try {\n    const xdc3 = new Xdc3(await GetProvider());\n\n    const { address, abi } = getContractAddress(type);\n\n    const contract = new xdc3.eth.Contract(abi, address);\n    const accounts = await xdc3.eth.getAccounts();\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call();\n\n      return resp;\n    } else if (stateMutability === \"payable\") {\n      const [value] = params.splice(params.length - 1, 1);\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: accounts[0],\n      });\n      const resp = await contract.methods[method](...params).send({\n        from: accounts[0],\n        gas: gasLimit,\n        value: value,\n      });\n\n      return resp;\n    } else {\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: accounts[0],\n      });\n      console.log(\"accounts\", accounts, toXdcAddress(accounts[0]));\n      const resp = await contract.methods[method](...params).send({\n        from: toXdcAddress(accounts[0]),\n        gas: gasLimit,\n      });\n\n      return resp;\n    }\n  } catch (e) {\n    console.log(\"resp\", IsJsonRpcError(e));\n    console.log(\"resp\", e);\n    throw e;\n  }\n}\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nfunction getContractAddress(type) {\n  return {\n    address: CONTRACT_ADDRESS[type],\n    abi: CONTRACT_ABI[type],\n  };\n}\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/wallet-connect/Keystore.js",["338","339","340","341","342","343"],"import React, { useEffect, useState } from \"react\";\n\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nimport { GetAccountFromKeystore } from \"../../helpers/crypto\";\n\nconst ImportFromFilerBodyComponent = ({ cb, defaultPath }) => {\n  let fileReader;\n\n  useEffect(() => {\n    if (defaultPath) {\n      handleFileChosen(defaultPath);\n    }\n  });\n\n  const handleFileRead = () => {\n    const content = fileReader.result;\n    cb(content);\n  };\n\n  const handleFileChosen = (file) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsText(file);\n  };\n\n  return (\n    <>\n      <input\n        className=\"form-file-input form-control\"\n        type=\"file\"\n        id=\"input-file\"\n        accept=\".json\"\n        onChange={(e) => handleFileChosen(e.target.files[0])}\n      />\n    </>\n  );\n};\n\nconst Keystore = ({ cb, back }) => {\n  const [keystore, setKeystore] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  let btnName = \"Submit\";\n\n  // if (loading) {\n  //   btnName = LOADER_BOX;\n  // }\n\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header border-bottom-0\">\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n          Connect with Key Store\n        </h5>\n      </div>\n      <div className=\"modal-body\">\n        <form className=\"\" role=\"form\">\n          <div className=\"form-group\">\n            <ImportFromFilerBodyComponent cb={setKeystore} />\n          </div>\n          <div className=\"\">{statusMessage}</div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter Password\"\n              value={pwd}\n              onChange={x => setPwd(x.target.value)}\n            />\n          </div>\n          <button\n            className=\"btn btn-rounded btn-info mb-2\"\n            onClick={(e) => {\n              e.preventDefault();\n              const account = GetAccountFromKeystore(keystore, pwd);\n              if (account === null) {\n                setStatusMessage(\"Invalid Password / Keystore\");\n              } else {\n                setStatusMessage(\"Successfully got the account\");\n              }\n              cb(account);\n            }}\n          >\n            Submit\n          </button>\n          <div></div>\n        </form>\n      </div>\n      <div className=\"modal-footer border-top-0 d-flex justify-content-center\">\n        <button\n          onClick={back}\n          type=\"button\"\n          className=\"back\"\n          data-dismiss=\"modal\"\n        >\n          Back\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Keystore;\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/wallet-connect/PrivateKey.js",["344"],"import React, { useState } from \"react\";\nimport _ from \"lodash\";\n\nimport { GetAccountFromPK, VerifyPrivateKey } from \"../../helpers/crypto\";\nimport { LOADER_BOX } from \"../common/common\";\n\nconst PrivateKey = ({ cb, loading, back }) => {\n  const [privateKey, setPrivateKey] = useState(\"\");\n\n  function renderMessage() {\n    if (_.isEmpty(privateKey)) return <div className=\"no-key\">&nbsp;</div>;\n    const isValid = VerifyPrivateKey(privateKey);\n    if (isValid)\n      return <div className=\"valid-private-key\">Private Key is valid</div>;\n    else if (isValid === false)\n      return <div className=\"invalid-private-key\">Invalid Private Key</div>;\n  }\n\n  let btnName = \"Submit\";\n\n  if (loading) {\n    btnName = LOADER_BOX;\n  }\n\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header border-bottom-0\">\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n          Connect with Private Key\n        </h5>\n      </div>\n      <div className=\"modal-body\">\n        <form className=\"\" role=\"form\">\n          <div className=\"form-group\">\n            <label>Enter Private Key</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter Private Key\"\n              value={privateKey}\n              onChange={(x) => setPrivateKey(x.target.value)}\n            />\n          </div>\n\n          <div className=\"private-key__message\">{renderMessage()}</div>\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              const account = GetAccountFromPK(privateKey);\n              cb(account);\n            }}\n            disabled={loading}\n            className=\"btn btn-rounded btn-info mb-2\"\n          >\n            {btnName}\n          </button>\n          <div></div>\n        </form>\n      </div>\n      <div className=\"modal-footer border-top-0 d-flex justify-content-center\">\n        <button\n          onClick={back}\n          type=\"button\"\n          className=\"back\"\n          data-dismiss=\"modal\"\n        >\n          Back\n        </button>\n      </div>\n    </div>\n\n    // <Container>\n    //   <Row>\n    //     <input\n    //       className=\"private-key__input\"\n    //       value={privateKey}\n    //       onChange={(x) => setPrivateKey(x.target.value)}\n    //     />\n    //   </Row>\n\n    //   <Row>\n    //     <div className=\"private-key__message\">{renderMessage()}</div>\n    //   </Row>\n\n    //   <Row>\n    //     <Col>\n    //       <Button\n    //         className=\"u-float-r\"\n    //         onClick={() => {\n    //           const account = GetAccountFromPK(privateKey);\n    //           cb(account);\n    //         }}\n    //         disabled={loading}\n    //       >\n    //         {btnName}\n    //       </Button>\n    //     </Col>\n    //   </Row>\n    // </Container>\n    // </div>\n  );\n};\n\nexport default PrivateKey;\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/account.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/wallets/dcentBridge.js",["345","346","347","348","349","350","351","352"],"import DcentWebConnector from \"dcent-web-connector\";\n\nimport { GetRevertReason } from \"../helpers/crypto\";\nimport {\n  CONTRACT_ABI,\n  CONTRACT_ADDRESS,\n  HTTP_PROVIDER,\n  LOADERS,\n} from \"../helpers/constant\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\nimport { toast } from \"react-toastify\";\n\n// DcentWebConnector.info()\n//   .then((x) => {\n//     console.log(\"DcentWebConnector\", x);\n//   })\n//   .catch((e) => {\n//     console.log(\"DcentWebConnector\", e);\n//   });\n\nexport const initListener = () => {\n  DcentWebConnector.setConnectionListener(connectionListener);\n};\n\nfunction connectionListener(state) {\n  if (state === DcentWebConnector.state.CONNECTED) {\n  } else if (state === DcentWebConnector.state.DISCONNECTED) {\n  }\n}\n","/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/WorldMap.js",[],"/home/rudresh/Workspace/Storx/storx-staking-dapp-live/src/components/common/GeneralModal.js",["353"],"import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ToggleModal({\n  children,\n  btnElement = Button,\n  btnName = \"View\",\n  btnProps = {},\n  disableSubmit = true,\n  disableClose = true,\n  modalClass = \"custom-modal\",\n  ...rest\n}) {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const submitBtn = (\n    <Button\n      variant=\"primary\"\n      onClick={() => {\n        if (rest.onSubmit && typeof rest.onSubmit === \"function\") {\n          rest.onSubmit();\n        }\n      }}\n    >\n      {rest.btnNameSubmit || \"Understood\"}\n    </Button>\n  );\n\n  let footer = rest.footer ? (\n    rest.footer\n  ) : disableClose === true ? (\n    \"\"\n  ) : (\n    <Button\n      variant=\"secondary\"\n      onClick={() => {\n        handleClose();\n        if (rest.onClose && typeof rest.onClose === \"function\") {\n          rest.onClose();\n        }\n      }}\n    ></Button>\n  );\n\n  return (\n    <>\n      {React.createElement(\n        btnElement,\n        { ...btnProps, onClick: handleShow },\n        btnName\n      )}\n\n      <Modal\n        dialogClassName={modalClass}\n        {...rest}\n        show={showModal}\n        onHide={handleClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{rest.modalname}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer>{footer}</Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ToggleModal;\n",{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":40,"column":30,"nodeType":"360","messageId":"361","endLine":40,"endColumn":31,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":199,"column":1,"nodeType":"365","messageId":"366","endLine":211,"endColumn":3},{"ruleId":"363","severity":1,"message":"367","line":213,"column":1,"nodeType":"365","messageId":"366","endLine":224,"endColumn":3},{"ruleId":"354","replacedBy":"368"},{"ruleId":"356","replacedBy":"369"},{"ruleId":"354","replacedBy":"370"},{"ruleId":"356","replacedBy":"371"},{"ruleId":"372","severity":1,"message":"373","line":16,"column":8,"nodeType":"374","messageId":"375","endLine":16,"endColumn":17},{"ruleId":"372","severity":1,"message":"376","line":38,"column":10,"nodeType":"374","messageId":"375","endLine":38,"endColumn":16},{"ruleId":"358","severity":1,"message":"359","line":42,"column":30,"nodeType":"360","messageId":"361","endLine":42,"endColumn":31,"suggestions":"377"},{"ruleId":"363","severity":1,"message":"364","line":237,"column":1,"nodeType":"365","messageId":"366","endLine":249,"endColumn":3},{"ruleId":"363","severity":1,"message":"367","line":251,"column":1,"nodeType":"365","messageId":"366","endLine":262,"endColumn":3},{"ruleId":"378","severity":1,"message":"379","line":42,"column":9,"nodeType":"380","messageId":"381","endLine":42,"endColumn":75,"fix":"382"},{"ruleId":"378","severity":1,"message":"379","line":48,"column":9,"nodeType":"380","messageId":"381","endLine":48,"endColumn":74,"fix":"383"},{"ruleId":"378","severity":1,"message":"379","line":23,"column":17,"nodeType":"380","messageId":"381","endLine":23,"endColumn":62,"fix":"384"},{"ruleId":"378","severity":1,"message":"379","line":33,"column":21,"nodeType":"380","messageId":"381","endLine":33,"endColumn":80,"fix":"385"},{"ruleId":"378","severity":1,"message":"379","line":38,"column":21,"nodeType":"380","messageId":"381","endLine":41,"endColumn":22,"fix":"386"},{"ruleId":"378","severity":1,"message":"379","line":46,"column":21,"nodeType":"380","messageId":"381","endLine":49,"endColumn":22,"fix":"387"},{"ruleId":"378","severity":1,"message":"379","line":54,"column":21,"nodeType":"380","messageId":"381","endLine":54,"endColumn":73,"fix":"388"},{"ruleId":"378","severity":1,"message":"379","line":59,"column":21,"nodeType":"380","messageId":"381","endLine":59,"endColumn":79,"fix":"389"},{"ruleId":"378","severity":1,"message":"379","line":64,"column":21,"nodeType":"380","messageId":"381","endLine":67,"endColumn":22,"fix":"390"},{"ruleId":"391","severity":1,"message":"392","line":78,"column":7,"nodeType":"380","endLine":78,"endColumn":60},{"ruleId":"372","severity":1,"message":"393","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":19},{"ruleId":"372","severity":1,"message":"394","line":3,"column":21,"nodeType":"374","messageId":"375","endLine":3,"endColumn":24},{"ruleId":"372","severity":1,"message":"395","line":3,"column":26,"nodeType":"374","messageId":"375","endLine":3,"endColumn":29},{"ruleId":"372","severity":1,"message":"376","line":3,"column":31,"nodeType":"374","messageId":"375","endLine":3,"endColumn":37},{"ruleId":"372","severity":1,"message":"396","line":4,"column":19,"nodeType":"374","messageId":"375","endLine":4,"endColumn":24},{"ruleId":"372","severity":1,"message":"397","line":3,"column":30,"nodeType":"374","messageId":"375","endLine":3,"endColumn":38},{"ruleId":"372","severity":1,"message":"398","line":4,"column":28,"nodeType":"374","messageId":"375","endLine":4,"endColumn":36},{"ruleId":"378","severity":1,"message":"379","line":41,"column":11,"nodeType":"380","messageId":"381","endLine":44,"endColumn":12,"fix":"399"},{"ruleId":"372","severity":1,"message":"400","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":17},{"ruleId":"372","severity":1,"message":"398","line":7,"column":10,"nodeType":"374","messageId":"375","endLine":7,"endColumn":18},{"ruleId":"372","severity":1,"message":"401","line":7,"column":20,"nodeType":"374","messageId":"375","endLine":7,"endColumn":30},{"ruleId":"372","severity":1,"message":"402","line":8,"column":10,"nodeType":"374","messageId":"375","endLine":8,"endColumn":22},{"ruleId":"372","severity":1,"message":"393","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":19},{"ruleId":"372","severity":1,"message":"394","line":3,"column":21,"nodeType":"374","messageId":"375","endLine":3,"endColumn":24},{"ruleId":"372","severity":1,"message":"395","line":3,"column":26,"nodeType":"374","messageId":"375","endLine":3,"endColumn":29},{"ruleId":"372","severity":1,"message":"376","line":3,"column":38,"nodeType":"374","messageId":"375","endLine":3,"endColumn":44},{"ruleId":"372","severity":1,"message":"403","line":8,"column":10,"nodeType":"374","messageId":"375","endLine":8,"endColumn":22},{"ruleId":"372","severity":1,"message":"404","line":6,"column":13,"nodeType":"374","messageId":"375","endLine":6,"endColumn":24},{"ruleId":"372","severity":1,"message":"405","line":3,"column":8,"nodeType":"374","messageId":"375","endLine":3,"endColumn":9},{"ruleId":"372","severity":1,"message":"406","line":12,"column":5,"nodeType":"374","messageId":"375","endLine":12,"endColumn":14},{"ruleId":"372","severity":1,"message":"393","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":19},{"ruleId":"372","severity":1,"message":"394","line":3,"column":21,"nodeType":"374","messageId":"375","endLine":3,"endColumn":24},{"ruleId":"372","severity":1,"message":"395","line":3,"column":26,"nodeType":"374","messageId":"375","endLine":3,"endColumn":29},{"ruleId":"372","severity":1,"message":"376","line":3,"column":31,"nodeType":"374","messageId":"375","endLine":3,"endColumn":37},{"ruleId":"372","severity":1,"message":"407","line":46,"column":7,"nodeType":"374","messageId":"375","endLine":46,"endColumn":14},{"ruleId":"408","severity":1,"message":"409","line":60,"column":9,"nodeType":"380","endLine":60,"endColumn":40},{"ruleId":"408","severity":1,"message":"409","line":33,"column":9,"nodeType":"380","endLine":33,"endColumn":40},{"ruleId":"372","severity":1,"message":"410","line":3,"column":10,"nodeType":"374","messageId":"375","endLine":3,"endColumn":25},{"ruleId":"372","severity":1,"message":"411","line":5,"column":3,"nodeType":"374","messageId":"375","endLine":5,"endColumn":15},{"ruleId":"372","severity":1,"message":"412","line":6,"column":3,"nodeType":"374","messageId":"375","endLine":6,"endColumn":19},{"ruleId":"372","severity":1,"message":"413","line":7,"column":3,"nodeType":"374","messageId":"375","endLine":7,"endColumn":16},{"ruleId":"372","severity":1,"message":"414","line":8,"column":3,"nodeType":"374","messageId":"375","endLine":8,"endColumn":10},{"ruleId":"372","severity":1,"message":"415","line":11,"column":13,"nodeType":"374","messageId":"375","endLine":11,"endColumn":20},{"ruleId":"372","severity":1,"message":"416","line":12,"column":8,"nodeType":"374","messageId":"375","endLine":12,"endColumn":13},{"ruleId":"372","severity":1,"message":"417","line":13,"column":10,"nodeType":"374","messageId":"375","endLine":13,"endColumn":15},{"ruleId":"372","severity":1,"message":"418","line":19,"column":9,"nodeType":"374","messageId":"375","endLine":19,"endColumn":18},"no-native-reassign",["419"],"no-negated-in-lhs",["420"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["421","422"],"no-extend-native","Object prototype is read only, properties should not be added.","CallExpression","unexpected","Array prototype is read only, properties should not be added.",["419"],["420"],["419"],["420"],"no-unused-vars","'TxHistory' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.",["423","424"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"425","text":"426"},{"range":"427","text":"426"},{"range":"428","text":"426"},{"range":"429","text":"426"},{"range":"430","text":"426"},{"range":"431","text":"426"},{"range":"432","text":"426"},{"range":"433","text":"426"},{"range":"434","text":"426"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'toWei' is defined but never used.","'OnScroll' is defined but never used.","'DECIMALS' is defined but never used.",{"range":"435","text":"426"},"'fromWei' is defined but never used.","'RemoveExpo' is defined but never used.","'FormatNumber' is defined but never used.","'PROJECT_NAME' is defined but never used.","'dcentBridge' is defined but never used.","'_' is defined but never used.","'addresses' is assigned a value but never used.","'btnName' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","'GetRevertReason' is defined but never used.","'CONTRACT_ABI' is defined but never used.","'CONTRACT_ADDRESS' is defined but never used.","'HTTP_PROVIDER' is defined but never used.","'LOADERS' is defined but never used.","'actions' is defined but never used.","'store' is defined but never used.","'toast' is defined but never used.","'submitBtn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"436","fix":"437","desc":"438"},{"messageId":"439","fix":"440","desc":"441"},{"messageId":"436","fix":"442","desc":"438"},{"messageId":"439","fix":"443","desc":"441"},[1087,1087]," rel=\"noreferrer\"",[1249,1249],[593,593],[977,977],[1284,1284],[1605,1605],[1870,1870],[2120,2120],[2418,2418],[1413,1413],"removeEscape",{"range":"444","text":"445"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"446","text":"447"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"448","text":"445"},{"range":"449","text":"447"},[1066,1067],"",[1066,1066],"\\",[1126,1127],[1126,1126]]